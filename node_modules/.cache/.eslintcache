[{"D:\\vizsgaremek\\src\\index.js":"1","D:\\vizsgaremek\\src\\reportWebVitals.js":"2","D:\\vizsgaremek\\src\\App.js":"3","D:\\vizsgaremek\\src\\components\\savefile_management.js":"4"},{"size":552,"mtime":1694498531199,"results":"5","hashOfConfig":"6"},{"size":375,"mtime":1694498531199,"results":"7","hashOfConfig":"6"},{"size":20021,"mtime":1695103415649,"results":"8","hashOfConfig":"6"},{"size":1936,"mtime":1695103415654,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"m7daed",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\vizsgaremek\\src\\index.js",[],[],"D:\\vizsgaremek\\src\\reportWebVitals.js",[],[],"D:\\vizsgaremek\\src\\App.js",["22","23","24"],[],"D:\\vizsgaremek\\src\\components\\savefile_management.js",["25"],[],{"ruleId":"26","severity":1,"message":"27","line":6,"column":16,"nodeType":"28","messageId":"29","endLine":6,"endColumn":28},{"ruleId":"30","severity":1,"message":"31","line":197,"column":7,"nodeType":"32","endLine":197,"endColumn":14},{"ruleId":"33","severity":1,"message":"34","line":199,"column":3,"nodeType":"35","messageId":"36","endLine":600,"endColumn":4},{"ruleId":"26","severity":1,"message":"37","line":1,"column":8,"nodeType":"28","messageId":"29","endLine":1,"endColumn":13},"no-unused-vars","'disableCache' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","BinaryExpression","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'React' is defined but never used."]