{"ast":null,"code":"var Pool = require('./Pool');\nvar PoolConfig = require('./PoolConfig');\nvar PoolNamespace = require('./PoolNamespace');\nvar PoolSelector = require('./PoolSelector');\nvar Util = require('util');\nvar EventEmitter = require('events').EventEmitter;\nmodule.exports = PoolCluster;\n\n/**\n * PoolCluster\n * @constructor\n * @param {object} [config] The pool cluster configuration\n * @public\n */\nfunction PoolCluster(config) {\n  EventEmitter.call(this);\n  config = config || {};\n  this._canRetry = typeof config.canRetry === 'undefined' ? true : config.canRetry;\n  this._defaultSelector = config.defaultSelector || 'RR';\n  this._removeNodeErrorCount = config.removeNodeErrorCount || 5;\n  this._restoreNodeTimeout = config.restoreNodeTimeout || 0;\n  this._closed = false;\n  this._findCaches = Object.create(null);\n  this._lastId = 0;\n  this._namespaces = Object.create(null);\n  this._nodes = Object.create(null);\n}\nUtil.inherits(PoolCluster, EventEmitter);\nPoolCluster.prototype.add = function add(id, config) {\n  if (this._closed) {\n    throw new Error('PoolCluster is closed.');\n  }\n  var nodeId = typeof id === 'object' ? 'CLUSTER::' + ++this._lastId : String(id);\n  if (this._nodes[nodeId] !== undefined) {\n    throw new Error('Node ID \"' + nodeId + '\" is already defined in PoolCluster.');\n  }\n  var poolConfig = typeof id !== 'object' ? new PoolConfig(config) : new PoolConfig(id);\n  this._nodes[nodeId] = {\n    id: nodeId,\n    errorCount: 0,\n    pool: new Pool({\n      config: poolConfig\n    }),\n    _offlineUntil: 0\n  };\n  this._clearFindCaches();\n};\nPoolCluster.prototype.end = function end(callback) {\n  var cb = callback !== undefined ? callback : _cb;\n  if (typeof cb !== 'function') {\n    throw TypeError('callback argument must be a function');\n  }\n  if (this._closed) {\n    process.nextTick(cb);\n    return;\n  }\n  this._closed = true;\n  var calledBack = false;\n  var nodeIds = Object.keys(this._nodes);\n  var waitingClose = 0;\n  function onEnd(err) {\n    if (!calledBack && (err || --waitingClose <= 0)) {\n      calledBack = true;\n      cb(err);\n    }\n  }\n  for (var i = 0; i < nodeIds.length; i++) {\n    var nodeId = nodeIds[i];\n    var node = this._nodes[nodeId];\n    waitingClose++;\n    node.pool.end(onEnd);\n  }\n  if (waitingClose === 0) {\n    process.nextTick(onEnd);\n  }\n};\nPoolCluster.prototype.of = function (pattern, selector) {\n  pattern = pattern || '*';\n  selector = selector || this._defaultSelector;\n  selector = selector.toUpperCase();\n  if (typeof PoolSelector[selector] === 'undefined') {\n    selector = this._defaultSelector;\n  }\n  var key = pattern + selector;\n  if (typeof this._namespaces[key] === 'undefined') {\n    this._namespaces[key] = new PoolNamespace(this, pattern, selector);\n  }\n  return this._namespaces[key];\n};\nPoolCluster.prototype.remove = function remove(pattern) {\n  var foundNodeIds = this._findNodeIds(pattern, true);\n  for (var i = 0; i < foundNodeIds.length; i++) {\n    var node = this._getNode(foundNodeIds[i]);\n    if (node) {\n      this._removeNode(node);\n    }\n  }\n};\nPoolCluster.prototype.getConnection = function (pattern, selector, cb) {\n  var namespace;\n  if (typeof pattern === 'function') {\n    cb = pattern;\n    namespace = this.of();\n  } else {\n    if (typeof selector === 'function') {\n      cb = selector;\n      selector = this._defaultSelector;\n    }\n    namespace = this.of(pattern, selector);\n  }\n  namespace.getConnection(cb);\n};\nPoolCluster.prototype._clearFindCaches = function _clearFindCaches() {\n  this._findCaches = Object.create(null);\n};\nPoolCluster.prototype._decreaseErrorCount = function _decreaseErrorCount(node) {\n  var errorCount = node.errorCount;\n  if (errorCount > this._removeNodeErrorCount) {\n    errorCount = this._removeNodeErrorCount;\n  }\n  if (errorCount < 1) {\n    errorCount = 1;\n  }\n  node.errorCount = errorCount - 1;\n  if (node._offlineUntil) {\n    node._offlineUntil = 0;\n    this.emit('online', node.id);\n  }\n};\nPoolCluster.prototype._findNodeIds = function _findNodeIds(pattern, includeOffline) {\n  var currentTime = 0;\n  var foundNodeIds = this._findCaches[pattern];\n  if (foundNodeIds === undefined) {\n    var expression = patternRegExp(pattern);\n    var nodeIds = Object.keys(this._nodes);\n    foundNodeIds = nodeIds.filter(function (id) {\n      return id.match(expression);\n    });\n    this._findCaches[pattern] = foundNodeIds;\n  }\n  if (includeOffline) {\n    return foundNodeIds;\n  }\n  return foundNodeIds.filter(function (nodeId) {\n    var node = this._getNode(nodeId);\n    if (!node._offlineUntil) {\n      return true;\n    }\n    if (!currentTime) {\n      currentTime = getMonotonicMilliseconds();\n    }\n    return node._offlineUntil <= currentTime;\n  }, this);\n};\nPoolCluster.prototype._getNode = function _getNode(id) {\n  return this._nodes[id] || null;\n};\nPoolCluster.prototype._increaseErrorCount = function _increaseErrorCount(node) {\n  var errorCount = ++node.errorCount;\n  if (this._removeNodeErrorCount > errorCount) {\n    return;\n  }\n  if (this._restoreNodeTimeout > 0) {\n    node._offlineUntil = getMonotonicMilliseconds() + this._restoreNodeTimeout;\n    this.emit('offline', node.id);\n    return;\n  }\n  this._removeNode(node);\n  this.emit('remove', node.id);\n};\nPoolCluster.prototype._getConnection = function (node, cb) {\n  var self = this;\n  node.pool.getConnection(function (err, connection) {\n    if (err) {\n      self._increaseErrorCount(node);\n      cb(err);\n      return;\n    } else {\n      self._decreaseErrorCount(node);\n    }\n    connection._clusterId = node.id;\n    cb(null, connection);\n  });\n};\nPoolCluster.prototype._removeNode = function _removeNode(node) {\n  delete this._nodes[node.id];\n  this._clearFindCaches();\n  node.pool.end(_noop);\n};\nfunction getMonotonicMilliseconds() {\n  var ms;\n  if (typeof process.hrtime === 'function') {\n    ms = process.hrtime();\n    ms = ms[0] * 1e3 + ms[1] * 1e-6;\n  } else {\n    ms = process.uptime() * 1000;\n  }\n  return Math.floor(ms);\n}\nfunction isRegExp(val) {\n  return typeof val === 'object' && Object.prototype.toString.call(val) === '[object RegExp]';\n}\nfunction patternRegExp(pattern) {\n  if (isRegExp(pattern)) {\n    return pattern;\n  }\n  var source = pattern.replace(/([.+?^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1').replace(/\\*/g, '.*');\n  return new RegExp('^' + source + '$');\n}\nfunction _cb(err) {\n  if (err) {\n    throw err;\n  }\n}\nfunction _noop() {}","map":{"version":3,"names":["Pool","require","PoolConfig","PoolNamespace","PoolSelector","Util","EventEmitter","module","exports","PoolCluster","config","call","_canRetry","canRetry","_defaultSelector","defaultSelector","_removeNodeErrorCount","removeNodeErrorCount","_restoreNodeTimeout","restoreNodeTimeout","_closed","_findCaches","Object","create","_lastId","_namespaces","_nodes","inherits","prototype","add","id","Error","nodeId","String","undefined","poolConfig","errorCount","pool","_offlineUntil","_clearFindCaches","end","callback","cb","_cb","TypeError","process","nextTick","calledBack","nodeIds","keys","waitingClose","onEnd","err","i","length","node","of","pattern","selector","toUpperCase","key","remove","foundNodeIds","_findNodeIds","_getNode","_removeNode","getConnection","namespace","_decreaseErrorCount","emit","includeOffline","currentTime","expression","patternRegExp","filter","match","getMonotonicMilliseconds","_increaseErrorCount","_getConnection","self","connection","_clusterId","_noop","ms","hrtime","uptime","Math","floor","isRegExp","val","toString","source","replace","RegExp"],"sources":["D:/BNH/vizsgaremek/node_modules/mysql/lib/PoolCluster.js"],"sourcesContent":["var Pool          = require('./Pool');\nvar PoolConfig    = require('./PoolConfig');\nvar PoolNamespace = require('./PoolNamespace');\nvar PoolSelector  = require('./PoolSelector');\nvar Util          = require('util');\nvar EventEmitter  = require('events').EventEmitter;\n\nmodule.exports = PoolCluster;\n\n/**\n * PoolCluster\n * @constructor\n * @param {object} [config] The pool cluster configuration\n * @public\n */\nfunction PoolCluster(config) {\n  EventEmitter.call(this);\n\n  config = config || {};\n  this._canRetry = typeof config.canRetry === 'undefined' ? true : config.canRetry;\n  this._defaultSelector = config.defaultSelector || 'RR';\n  this._removeNodeErrorCount = config.removeNodeErrorCount || 5;\n  this._restoreNodeTimeout = config.restoreNodeTimeout || 0;\n\n  this._closed = false;\n  this._findCaches = Object.create(null);\n  this._lastId = 0;\n  this._namespaces = Object.create(null);\n  this._nodes = Object.create(null);\n}\n\nUtil.inherits(PoolCluster, EventEmitter);\n\nPoolCluster.prototype.add = function add(id, config) {\n  if (this._closed) {\n    throw new Error('PoolCluster is closed.');\n  }\n\n  var nodeId = typeof id === 'object'\n    ? 'CLUSTER::' + (++this._lastId)\n    : String(id);\n\n  if (this._nodes[nodeId] !== undefined) {\n    throw new Error('Node ID \"' + nodeId + '\" is already defined in PoolCluster.');\n  }\n\n  var poolConfig = typeof id !== 'object'\n    ? new PoolConfig(config)\n    : new PoolConfig(id);\n\n  this._nodes[nodeId] = {\n    id            : nodeId,\n    errorCount    : 0,\n    pool          : new Pool({config: poolConfig}),\n    _offlineUntil : 0\n  };\n\n  this._clearFindCaches();\n};\n\nPoolCluster.prototype.end = function end(callback) {\n  var cb = callback !== undefined\n    ? callback\n    : _cb;\n\n  if (typeof cb !== 'function') {\n    throw TypeError('callback argument must be a function');\n  }\n\n  if (this._closed) {\n    process.nextTick(cb);\n    return;\n  }\n\n  this._closed = true;\n\n  var calledBack   = false;\n  var nodeIds      = Object.keys(this._nodes);\n  var waitingClose = 0;\n\n  function onEnd(err) {\n    if (!calledBack && (err || --waitingClose <= 0)) {\n      calledBack = true;\n      cb(err);\n    }\n  }\n\n  for (var i = 0; i < nodeIds.length; i++) {\n    var nodeId = nodeIds[i];\n    var node = this._nodes[nodeId];\n\n    waitingClose++;\n    node.pool.end(onEnd);\n  }\n\n  if (waitingClose === 0) {\n    process.nextTick(onEnd);\n  }\n};\n\nPoolCluster.prototype.of = function(pattern, selector) {\n  pattern = pattern || '*';\n\n  selector = selector || this._defaultSelector;\n  selector = selector.toUpperCase();\n  if (typeof PoolSelector[selector] === 'undefined') {\n    selector = this._defaultSelector;\n  }\n\n  var key = pattern + selector;\n\n  if (typeof this._namespaces[key] === 'undefined') {\n    this._namespaces[key] = new PoolNamespace(this, pattern, selector);\n  }\n\n  return this._namespaces[key];\n};\n\nPoolCluster.prototype.remove = function remove(pattern) {\n  var foundNodeIds = this._findNodeIds(pattern, true);\n\n  for (var i = 0; i < foundNodeIds.length; i++) {\n    var node = this._getNode(foundNodeIds[i]);\n\n    if (node) {\n      this._removeNode(node);\n    }\n  }\n};\n\nPoolCluster.prototype.getConnection = function(pattern, selector, cb) {\n  var namespace;\n  if (typeof pattern === 'function') {\n    cb = pattern;\n    namespace = this.of();\n  } else {\n    if (typeof selector === 'function') {\n      cb = selector;\n      selector = this._defaultSelector;\n    }\n\n    namespace = this.of(pattern, selector);\n  }\n\n  namespace.getConnection(cb);\n};\n\nPoolCluster.prototype._clearFindCaches = function _clearFindCaches() {\n  this._findCaches = Object.create(null);\n};\n\nPoolCluster.prototype._decreaseErrorCount = function _decreaseErrorCount(node) {\n  var errorCount = node.errorCount;\n\n  if (errorCount > this._removeNodeErrorCount) {\n    errorCount = this._removeNodeErrorCount;\n  }\n\n  if (errorCount < 1) {\n    errorCount = 1;\n  }\n\n  node.errorCount = errorCount - 1;\n\n  if (node._offlineUntil) {\n    node._offlineUntil = 0;\n    this.emit('online', node.id);\n  }\n};\n\nPoolCluster.prototype._findNodeIds = function _findNodeIds(pattern, includeOffline) {\n  var currentTime  = 0;\n  var foundNodeIds = this._findCaches[pattern];\n\n  if (foundNodeIds === undefined) {\n    var expression = patternRegExp(pattern);\n    var nodeIds    = Object.keys(this._nodes);\n\n    foundNodeIds = nodeIds.filter(function (id) {\n      return id.match(expression);\n    });\n\n    this._findCaches[pattern] = foundNodeIds;\n  }\n\n  if (includeOffline) {\n    return foundNodeIds;\n  }\n\n  return foundNodeIds.filter(function (nodeId) {\n    var node = this._getNode(nodeId);\n\n    if (!node._offlineUntil) {\n      return true;\n    }\n\n    if (!currentTime) {\n      currentTime = getMonotonicMilliseconds();\n    }\n\n    return node._offlineUntil <= currentTime;\n  }, this);\n};\n\nPoolCluster.prototype._getNode = function _getNode(id) {\n  return this._nodes[id] || null;\n};\n\nPoolCluster.prototype._increaseErrorCount = function _increaseErrorCount(node) {\n  var errorCount = ++node.errorCount;\n\n  if (this._removeNodeErrorCount > errorCount) {\n    return;\n  }\n\n  if (this._restoreNodeTimeout > 0) {\n    node._offlineUntil = getMonotonicMilliseconds() + this._restoreNodeTimeout;\n    this.emit('offline', node.id);\n    return;\n  }\n\n  this._removeNode(node);\n  this.emit('remove', node.id);\n};\n\nPoolCluster.prototype._getConnection = function(node, cb) {\n  var self = this;\n\n  node.pool.getConnection(function (err, connection) {\n    if (err) {\n      self._increaseErrorCount(node);\n      cb(err);\n      return;\n    } else {\n      self._decreaseErrorCount(node);\n    }\n\n    connection._clusterId = node.id;\n\n    cb(null, connection);\n  });\n};\n\nPoolCluster.prototype._removeNode = function _removeNode(node) {\n  delete this._nodes[node.id];\n\n  this._clearFindCaches();\n\n  node.pool.end(_noop);\n};\n\nfunction getMonotonicMilliseconds() {\n  var ms;\n\n  if (typeof process.hrtime === 'function') {\n    ms = process.hrtime();\n    ms = ms[0] * 1e3 + ms[1] * 1e-6;\n  } else {\n    ms = process.uptime() * 1000;\n  }\n\n  return Math.floor(ms);\n}\n\nfunction isRegExp(val) {\n  return typeof val === 'object'\n    && Object.prototype.toString.call(val) === '[object RegExp]';\n}\n\nfunction patternRegExp(pattern) {\n  if (isRegExp(pattern)) {\n    return pattern;\n  }\n\n  var source = pattern\n    .replace(/([.+?^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1')\n    .replace(/\\*/g, '.*');\n\n  return new RegExp('^' + source + '$');\n}\n\nfunction _cb(err) {\n  if (err) {\n    throw err;\n  }\n}\n\nfunction _noop() {}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}