{"ast":null,"code":"var PacketHeader = require('./PacketHeader');\nvar BigNumber = require('bignumber.js');\nvar Buffer = require('safe-buffer').Buffer;\nvar BufferList = require('./BufferList');\nvar MAX_PACKET_LENGTH = Math.pow(2, 24) - 1;\nvar MUL_32BIT = Math.pow(2, 32);\nvar PACKET_HEADER_LENGTH = 4;\nmodule.exports = Parser;\nfunction Parser(options) {\n  options = options || {};\n  this._supportBigNumbers = options.config && options.config.supportBigNumbers;\n  this._buffer = Buffer.alloc(0);\n  this._nextBuffers = new BufferList();\n  this._longPacketBuffers = new BufferList();\n  this._offset = 0;\n  this._packetEnd = null;\n  this._packetHeader = null;\n  this._packetOffset = null;\n  this._onError = options.onError || function (err) {\n    throw err;\n  };\n  this._onPacket = options.onPacket || function () {};\n  this._nextPacketNumber = 0;\n  this._encoding = 'utf-8';\n  this._paused = false;\n}\nParser.prototype.write = function write(chunk) {\n  this._nextBuffers.push(chunk);\n  while (!this._paused) {\n    var packetHeader = this._tryReadPacketHeader();\n    if (!packetHeader) {\n      break;\n    }\n    if (!this._combineNextBuffers(packetHeader.length)) {\n      break;\n    }\n    this._parsePacket(packetHeader);\n  }\n};\nParser.prototype.append = function append(chunk) {\n  if (!chunk || chunk.length === 0) {\n    return;\n  }\n\n  // Calculate slice ranges\n  var sliceEnd = this._buffer.length;\n  var sliceStart = this._packetOffset === null ? this._offset : this._packetOffset;\n  var sliceLength = sliceEnd - sliceStart;\n\n  // Get chunk data\n  var buffer = null;\n  var chunks = !(chunk instanceof Array || Array.isArray(chunk)) ? [chunk] : chunk;\n  var length = 0;\n  var offset = 0;\n  for (var i = 0; i < chunks.length; i++) {\n    length += chunks[i].length;\n  }\n  if (sliceLength !== 0) {\n    // Create a new Buffer\n    buffer = Buffer.allocUnsafe(sliceLength + length);\n    offset = 0;\n\n    // Copy data slice\n    offset += this._buffer.copy(buffer, 0, sliceStart, sliceEnd);\n\n    // Copy chunks\n    for (var i = 0; i < chunks.length; i++) {\n      offset += chunks[i].copy(buffer, offset);\n    }\n  } else if (chunks.length > 1) {\n    // Create a new Buffer\n    buffer = Buffer.allocUnsafe(length);\n    offset = 0;\n\n    // Copy chunks\n    for (var i = 0; i < chunks.length; i++) {\n      offset += chunks[i].copy(buffer, offset);\n    }\n  } else {\n    // Buffer is the only chunk\n    buffer = chunks[0];\n  }\n\n  // Adjust data-tracking pointers\n  this._buffer = buffer;\n  this._offset = this._offset - sliceStart;\n  this._packetEnd = this._packetEnd !== null ? this._packetEnd - sliceStart : null;\n  this._packetOffset = this._packetOffset !== null ? this._packetOffset - sliceStart : null;\n};\nParser.prototype.pause = function () {\n  this._paused = true;\n};\nParser.prototype.resume = function () {\n  this._paused = false;\n\n  // nextTick() to avoid entering write() multiple times within the same stack\n  // which would cause problems as write manipulates the state of the object.\n  process.nextTick(this.write.bind(this));\n};\nParser.prototype.peak = function peak(offset) {\n  return this._buffer[this._offset + (offset >>> 0)];\n};\nParser.prototype.parseUnsignedNumber = function parseUnsignedNumber(bytes) {\n  if (bytes === 1) {\n    return this._buffer[this._offset++];\n  }\n  var buffer = this._buffer;\n  var offset = this._offset + bytes - 1;\n  var value = 0;\n  if (bytes > 4) {\n    var err = new Error('parseUnsignedNumber: Supports only up to 4 bytes');\n    err.offset = this._offset - this._packetOffset - 1;\n    err.code = 'PARSER_UNSIGNED_TOO_LONG';\n    throw err;\n  }\n  while (offset >= this._offset) {\n    value = (value << 8 | buffer[offset]) >>> 0;\n    offset--;\n  }\n  this._offset += bytes;\n  return value;\n};\nParser.prototype.parseLengthCodedString = function () {\n  var length = this.parseLengthCodedNumber();\n  if (length === null) {\n    return null;\n  }\n  return this.parseString(length);\n};\nParser.prototype.parseLengthCodedBuffer = function () {\n  var length = this.parseLengthCodedNumber();\n  if (length === null) {\n    return null;\n  }\n  return this.parseBuffer(length);\n};\nParser.prototype.parseLengthCodedNumber = function parseLengthCodedNumber() {\n  if (this._offset >= this._buffer.length) {\n    var err = new Error('Parser: read past end');\n    err.offset = this._offset - this._packetOffset;\n    err.code = 'PARSER_READ_PAST_END';\n    throw err;\n  }\n  var bits = this._buffer[this._offset++];\n  if (bits <= 250) {\n    return bits;\n  }\n  switch (bits) {\n    case 251:\n      return null;\n    case 252:\n      return this.parseUnsignedNumber(2);\n    case 253:\n      return this.parseUnsignedNumber(3);\n    case 254:\n      break;\n    default:\n      var err = new Error('Unexpected first byte' + (bits ? ': 0x' + bits.toString(16) : ''));\n      err.offset = this._offset - this._packetOffset - 1;\n      err.code = 'PARSER_BAD_LENGTH_BYTE';\n      throw err;\n  }\n  var low = this.parseUnsignedNumber(4);\n  var high = this.parseUnsignedNumber(4);\n  var value;\n  if (high >>> 21) {\n    value = BigNumber(MUL_32BIT).times(high).plus(low).toString();\n    if (this._supportBigNumbers) {\n      return value;\n    }\n    var err = new Error('parseLengthCodedNumber: JS precision range exceeded, ' + 'number is >= 53 bit: \"' + value + '\"');\n    err.offset = this._offset - this._packetOffset - 8;\n    err.code = 'PARSER_JS_PRECISION_RANGE_EXCEEDED';\n    throw err;\n  }\n  value = low + MUL_32BIT * high;\n  return value;\n};\nParser.prototype.parseFiller = function (length) {\n  return this.parseBuffer(length);\n};\nParser.prototype.parseNullTerminatedBuffer = function () {\n  var end = this._nullByteOffset();\n  var value = this._buffer.slice(this._offset, end);\n  this._offset = end + 1;\n  return value;\n};\nParser.prototype.parseNullTerminatedString = function () {\n  var end = this._nullByteOffset();\n  var value = this._buffer.toString(this._encoding, this._offset, end);\n  this._offset = end + 1;\n  return value;\n};\nParser.prototype._nullByteOffset = function () {\n  var offset = this._offset;\n  while (this._buffer[offset] !== 0x00) {\n    offset++;\n    if (offset >= this._buffer.length) {\n      var err = new Error('Offset of null terminated string not found.');\n      err.offset = this._offset - this._packetOffset;\n      err.code = 'PARSER_MISSING_NULL_BYTE';\n      throw err;\n    }\n  }\n  return offset;\n};\nParser.prototype.parsePacketTerminatedBuffer = function parsePacketTerminatedBuffer() {\n  var length = this._packetEnd - this._offset;\n  return this.parseBuffer(length);\n};\nParser.prototype.parsePacketTerminatedString = function () {\n  var length = this._packetEnd - this._offset;\n  return this.parseString(length);\n};\nParser.prototype.parseBuffer = function (length) {\n  var response = Buffer.alloc(length);\n  this._buffer.copy(response, 0, this._offset, this._offset + length);\n  this._offset += length;\n  return response;\n};\nParser.prototype.parseString = function (length) {\n  var offset = this._offset;\n  var end = offset + length;\n  var value = this._buffer.toString(this._encoding, offset, end);\n  this._offset = end;\n  return value;\n};\nParser.prototype.parseGeometryValue = function () {\n  var buffer = this.parseLengthCodedBuffer();\n  var offset = 4;\n  if (buffer === null || !buffer.length) {\n    return null;\n  }\n  function parseGeometry() {\n    var result = null;\n    var byteOrder = buffer.readUInt8(offset);\n    offset += 1;\n    var wkbType = byteOrder ? buffer.readUInt32LE(offset) : buffer.readUInt32BE(offset);\n    offset += 4;\n    switch (wkbType) {\n      case 1:\n        // WKBPoint\n        var x = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset);\n        offset += 8;\n        var y = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset);\n        offset += 8;\n        result = {\n          x: x,\n          y: y\n        };\n        break;\n      case 2:\n        // WKBLineString\n        var numPoints = byteOrder ? buffer.readUInt32LE(offset) : buffer.readUInt32BE(offset);\n        offset += 4;\n        result = [];\n        for (var i = numPoints; i > 0; i--) {\n          var x = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset);\n          offset += 8;\n          var y = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset);\n          offset += 8;\n          result.push({\n            x: x,\n            y: y\n          });\n        }\n        break;\n      case 3:\n        // WKBPolygon\n        var numRings = byteOrder ? buffer.readUInt32LE(offset) : buffer.readUInt32BE(offset);\n        offset += 4;\n        result = [];\n        for (var i = numRings; i > 0; i--) {\n          var numPoints = byteOrder ? buffer.readUInt32LE(offset) : buffer.readUInt32BE(offset);\n          offset += 4;\n          var line = [];\n          for (var j = numPoints; j > 0; j--) {\n            var x = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset);\n            offset += 8;\n            var y = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset);\n            offset += 8;\n            line.push({\n              x: x,\n              y: y\n            });\n          }\n          result.push(line);\n        }\n        break;\n      case 4: // WKBMultiPoint\n      case 5: // WKBMultiLineString\n      case 6: // WKBMultiPolygon\n      case 7:\n        // WKBGeometryCollection\n        var num = byteOrder ? buffer.readUInt32LE(offset) : buffer.readUInt32BE(offset);\n        offset += 4;\n        var result = [];\n        for (var i = num; i > 0; i--) {\n          result.push(parseGeometry());\n        }\n        break;\n    }\n    return result;\n  }\n  return parseGeometry();\n};\nParser.prototype.reachedPacketEnd = function () {\n  return this._offset === this._packetEnd;\n};\nParser.prototype.incrementPacketNumber = function () {\n  var currentPacketNumber = this._nextPacketNumber;\n  this._nextPacketNumber = (this._nextPacketNumber + 1) % 256;\n  return currentPacketNumber;\n};\nParser.prototype.resetPacketNumber = function () {\n  this._nextPacketNumber = 0;\n};\nParser.prototype.packetLength = function packetLength() {\n  if (!this._packetHeader) {\n    return null;\n  }\n  return this._packetHeader.length + this._longPacketBuffers.size;\n};\nParser.prototype._combineNextBuffers = function _combineNextBuffers(bytes) {\n  var length = this._buffer.length - this._offset;\n  if (length >= bytes) {\n    return true;\n  }\n  if (length + this._nextBuffers.size < bytes) {\n    return false;\n  }\n  var buffers = [];\n  var bytesNeeded = bytes - length;\n  while (bytesNeeded > 0) {\n    var buffer = this._nextBuffers.shift();\n    buffers.push(buffer);\n    bytesNeeded -= buffer.length;\n  }\n  this.append(buffers);\n  return true;\n};\nParser.prototype._combineLongPacketBuffers = function _combineLongPacketBuffers() {\n  if (!this._longPacketBuffers.size) {\n    return;\n  }\n\n  // Calculate bytes\n  var remainingBytes = this._buffer.length - this._offset;\n  var trailingPacketBytes = this._buffer.length - this._packetEnd;\n\n  // Create buffer\n  var buf = null;\n  var buffer = Buffer.allocUnsafe(remainingBytes + this._longPacketBuffers.size);\n  var offset = 0;\n\n  // Copy long buffers\n  while (buf = this._longPacketBuffers.shift()) {\n    offset += buf.copy(buffer, offset);\n  }\n\n  // Copy remaining bytes\n  this._buffer.copy(buffer, offset, this._offset);\n  this._buffer = buffer;\n  this._offset = 0;\n  this._packetEnd = this._buffer.length - trailingPacketBytes;\n  this._packetOffset = 0;\n};\nParser.prototype._parsePacket = function _parsePacket(packetHeader) {\n  this._packetEnd = this._offset + packetHeader.length;\n  this._packetOffset = this._offset;\n  if (packetHeader.length === MAX_PACKET_LENGTH) {\n    this._longPacketBuffers.push(this._buffer.slice(this._packetOffset, this._packetEnd));\n    this._advanceToNextPacket();\n    return;\n  }\n  this._combineLongPacketBuffers();\n  var hadException = true;\n  try {\n    this._onPacket(packetHeader);\n    hadException = false;\n  } catch (err) {\n    if (!err || typeof err.code !== 'string' || err.code.substr(0, 7) !== 'PARSER_') {\n      throw err; // Rethrow non-MySQL errors\n    }\n\n    // Pass down parser errors\n    this._onError(err);\n    hadException = false;\n  } finally {\n    this._advanceToNextPacket();\n\n    // If there was an exception, the parser while loop will be broken out\n    // of after the finally block. So schedule a blank write to re-enter it\n    // to continue parsing any bytes that may already have been received.\n    if (hadException) {\n      process.nextTick(this.write.bind(this));\n    }\n  }\n};\nParser.prototype._tryReadPacketHeader = function _tryReadPacketHeader() {\n  if (this._packetHeader) {\n    return this._packetHeader;\n  }\n  if (!this._combineNextBuffers(PACKET_HEADER_LENGTH)) {\n    return null;\n  }\n  this._packetHeader = new PacketHeader(this.parseUnsignedNumber(3), this.parseUnsignedNumber(1));\n  if (this._packetHeader.number !== this._nextPacketNumber) {\n    var err = new Error('Packets out of order. Got: ' + this._packetHeader.number + ' ' + 'Expected: ' + this._nextPacketNumber);\n    err.code = 'PROTOCOL_PACKETS_OUT_OF_ORDER';\n    err.fatal = true;\n    this._onError(err);\n  }\n  this.incrementPacketNumber();\n  return this._packetHeader;\n};\nParser.prototype._advanceToNextPacket = function () {\n  this._offset = this._packetEnd;\n  this._packetHeader = null;\n  this._packetEnd = null;\n  this._packetOffset = null;\n};","map":{"version":3,"names":["PacketHeader","require","BigNumber","Buffer","BufferList","MAX_PACKET_LENGTH","Math","pow","MUL_32BIT","PACKET_HEADER_LENGTH","module","exports","Parser","options","_supportBigNumbers","config","supportBigNumbers","_buffer","alloc","_nextBuffers","_longPacketBuffers","_offset","_packetEnd","_packetHeader","_packetOffset","_onError","onError","err","_onPacket","onPacket","_nextPacketNumber","_encoding","_paused","prototype","write","chunk","push","packetHeader","_tryReadPacketHeader","_combineNextBuffers","length","_parsePacket","append","sliceEnd","sliceStart","sliceLength","buffer","chunks","Array","isArray","offset","i","allocUnsafe","copy","pause","resume","process","nextTick","bind","peak","parseUnsignedNumber","bytes","value","Error","code","parseLengthCodedString","parseLengthCodedNumber","parseString","parseLengthCodedBuffer","parseBuffer","bits","toString","low","high","times","plus","parseFiller","parseNullTerminatedBuffer","end","_nullByteOffset","slice","parseNullTerminatedString","parsePacketTerminatedBuffer","parsePacketTerminatedString","response","parseGeometryValue","parseGeometry","result","byteOrder","readUInt8","wkbType","readUInt32LE","readUInt32BE","x","readDoubleLE","readDoubleBE","y","numPoints","numRings","line","j","num","reachedPacketEnd","incrementPacketNumber","currentPacketNumber","resetPacketNumber","packetLength","size","buffers","bytesNeeded","shift","_combineLongPacketBuffers","remainingBytes","trailingPacketBytes","buf","_advanceToNextPacket","hadException","substr","number","fatal"],"sources":["D:/BNH/vizsgaremek/node_modules/mysql/lib/protocol/Parser.js"],"sourcesContent":["var PacketHeader = require('./PacketHeader');\nvar BigNumber    = require('bignumber.js');\nvar Buffer       = require('safe-buffer').Buffer;\nvar BufferList   = require('./BufferList');\n\nvar MAX_PACKET_LENGTH    = Math.pow(2, 24) - 1;\nvar MUL_32BIT            = Math.pow(2, 32);\nvar PACKET_HEADER_LENGTH = 4;\n\nmodule.exports = Parser;\nfunction Parser(options) {\n  options = options || {};\n\n  this._supportBigNumbers = options.config && options.config.supportBigNumbers;\n  this._buffer            = Buffer.alloc(0);\n  this._nextBuffers       = new BufferList();\n  this._longPacketBuffers = new BufferList();\n  this._offset            = 0;\n  this._packetEnd         = null;\n  this._packetHeader      = null;\n  this._packetOffset      = null;\n  this._onError           = options.onError || function(err) { throw err; };\n  this._onPacket          = options.onPacket || function() {};\n  this._nextPacketNumber  = 0;\n  this._encoding          = 'utf-8';\n  this._paused            = false;\n}\n\nParser.prototype.write = function write(chunk) {\n  this._nextBuffers.push(chunk);\n\n  while (!this._paused) {\n    var packetHeader = this._tryReadPacketHeader();\n\n    if (!packetHeader) {\n      break;\n    }\n\n    if (!this._combineNextBuffers(packetHeader.length)) {\n      break;\n    }\n\n    this._parsePacket(packetHeader);\n  }\n};\n\nParser.prototype.append = function append(chunk) {\n  if (!chunk || chunk.length === 0) {\n    return;\n  }\n\n  // Calculate slice ranges\n  var sliceEnd    = this._buffer.length;\n  var sliceStart  = this._packetOffset === null\n    ? this._offset\n    : this._packetOffset;\n  var sliceLength = sliceEnd - sliceStart;\n\n  // Get chunk data\n  var buffer = null;\n  var chunks = !(chunk instanceof Array || Array.isArray(chunk)) ? [chunk] : chunk;\n  var length = 0;\n  var offset = 0;\n\n  for (var i = 0; i < chunks.length; i++) {\n    length += chunks[i].length;\n  }\n\n  if (sliceLength !== 0) {\n    // Create a new Buffer\n    buffer = Buffer.allocUnsafe(sliceLength + length);\n    offset = 0;\n\n    // Copy data slice\n    offset += this._buffer.copy(buffer, 0, sliceStart, sliceEnd);\n\n    // Copy chunks\n    for (var i = 0; i < chunks.length; i++) {\n      offset += chunks[i].copy(buffer, offset);\n    }\n  } else if (chunks.length > 1) {\n    // Create a new Buffer\n    buffer = Buffer.allocUnsafe(length);\n    offset = 0;\n\n    // Copy chunks\n    for (var i = 0; i < chunks.length; i++) {\n      offset += chunks[i].copy(buffer, offset);\n    }\n  } else {\n    // Buffer is the only chunk\n    buffer = chunks[0];\n  }\n\n  // Adjust data-tracking pointers\n  this._buffer       = buffer;\n  this._offset       = this._offset - sliceStart;\n  this._packetEnd    = this._packetEnd !== null\n    ? this._packetEnd - sliceStart\n    : null;\n  this._packetOffset = this._packetOffset !== null\n    ? this._packetOffset - sliceStart\n    : null;\n};\n\nParser.prototype.pause = function() {\n  this._paused = true;\n};\n\nParser.prototype.resume = function() {\n  this._paused = false;\n\n  // nextTick() to avoid entering write() multiple times within the same stack\n  // which would cause problems as write manipulates the state of the object.\n  process.nextTick(this.write.bind(this));\n};\n\nParser.prototype.peak = function peak(offset) {\n  return this._buffer[this._offset + (offset >>> 0)];\n};\n\nParser.prototype.parseUnsignedNumber = function parseUnsignedNumber(bytes) {\n  if (bytes === 1) {\n    return this._buffer[this._offset++];\n  }\n\n  var buffer = this._buffer;\n  var offset = this._offset + bytes - 1;\n  var value  = 0;\n\n  if (bytes > 4) {\n    var err    = new Error('parseUnsignedNumber: Supports only up to 4 bytes');\n    err.offset = (this._offset - this._packetOffset - 1);\n    err.code   = 'PARSER_UNSIGNED_TOO_LONG';\n    throw err;\n  }\n\n  while (offset >= this._offset) {\n    value = ((value << 8) | buffer[offset]) >>> 0;\n    offset--;\n  }\n\n  this._offset += bytes;\n\n  return value;\n};\n\nParser.prototype.parseLengthCodedString = function() {\n  var length = this.parseLengthCodedNumber();\n\n  if (length === null) {\n    return null;\n  }\n\n  return this.parseString(length);\n};\n\nParser.prototype.parseLengthCodedBuffer = function() {\n  var length = this.parseLengthCodedNumber();\n\n  if (length === null) {\n    return null;\n  }\n\n  return this.parseBuffer(length);\n};\n\nParser.prototype.parseLengthCodedNumber = function parseLengthCodedNumber() {\n  if (this._offset >= this._buffer.length) {\n    var err    = new Error('Parser: read past end');\n    err.offset = (this._offset - this._packetOffset);\n    err.code   = 'PARSER_READ_PAST_END';\n    throw err;\n  }\n\n  var bits = this._buffer[this._offset++];\n\n  if (bits <= 250) {\n    return bits;\n  }\n\n  switch (bits) {\n    case 251:\n      return null;\n    case 252:\n      return this.parseUnsignedNumber(2);\n    case 253:\n      return this.parseUnsignedNumber(3);\n    case 254:\n      break;\n    default:\n      var err    = new Error('Unexpected first byte' + (bits ? ': 0x' + bits.toString(16) : ''));\n      err.offset = (this._offset - this._packetOffset - 1);\n      err.code   = 'PARSER_BAD_LENGTH_BYTE';\n      throw err;\n  }\n\n  var low = this.parseUnsignedNumber(4);\n  var high = this.parseUnsignedNumber(4);\n  var value;\n\n  if (high >>> 21) {\n    value = BigNumber(MUL_32BIT).times(high).plus(low).toString();\n\n    if (this._supportBigNumbers) {\n      return value;\n    }\n\n    var err    = new Error(\n      'parseLengthCodedNumber: JS precision range exceeded, ' +\n      'number is >= 53 bit: \"' + value + '\"'\n    );\n    err.offset = (this._offset - this._packetOffset - 8);\n    err.code   = 'PARSER_JS_PRECISION_RANGE_EXCEEDED';\n    throw err;\n  }\n\n  value = low + (MUL_32BIT * high);\n\n  return value;\n};\n\nParser.prototype.parseFiller = function(length) {\n  return this.parseBuffer(length);\n};\n\nParser.prototype.parseNullTerminatedBuffer = function() {\n  var end      = this._nullByteOffset();\n  var value    = this._buffer.slice(this._offset, end);\n  this._offset = end + 1;\n\n  return value;\n};\n\nParser.prototype.parseNullTerminatedString = function() {\n  var end      = this._nullByteOffset();\n  var value    = this._buffer.toString(this._encoding, this._offset, end);\n  this._offset = end + 1;\n\n  return value;\n};\n\nParser.prototype._nullByteOffset = function() {\n  var offset = this._offset;\n\n  while (this._buffer[offset] !== 0x00) {\n    offset++;\n\n    if (offset >= this._buffer.length) {\n      var err    = new Error('Offset of null terminated string not found.');\n      err.offset = (this._offset - this._packetOffset);\n      err.code   = 'PARSER_MISSING_NULL_BYTE';\n      throw err;\n    }\n  }\n\n  return offset;\n};\n\nParser.prototype.parsePacketTerminatedBuffer = function parsePacketTerminatedBuffer() {\n  var length = this._packetEnd - this._offset;\n  return this.parseBuffer(length);\n};\n\nParser.prototype.parsePacketTerminatedString = function() {\n  var length = this._packetEnd - this._offset;\n  return this.parseString(length);\n};\n\nParser.prototype.parseBuffer = function(length) {\n  var response = Buffer.alloc(length);\n  this._buffer.copy(response, 0, this._offset, this._offset + length);\n\n  this._offset += length;\n  return response;\n};\n\nParser.prototype.parseString = function(length) {\n  var offset = this._offset;\n  var end = offset + length;\n  var value = this._buffer.toString(this._encoding, offset, end);\n\n  this._offset = end;\n  return value;\n};\n\nParser.prototype.parseGeometryValue = function() {\n  var buffer = this.parseLengthCodedBuffer();\n  var offset = 4;\n\n  if (buffer === null || !buffer.length) {\n    return null;\n  }\n\n  function parseGeometry() {\n    var result = null;\n    var byteOrder = buffer.readUInt8(offset); offset += 1;\n    var wkbType = byteOrder ? buffer.readUInt32LE(offset) : buffer.readUInt32BE(offset); offset += 4;\n    switch (wkbType) {\n      case 1: // WKBPoint\n        var x = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset); offset += 8;\n        var y = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset); offset += 8;\n        result = {x: x, y: y};\n        break;\n      case 2: // WKBLineString\n        var numPoints = byteOrder ? buffer.readUInt32LE(offset) : buffer.readUInt32BE(offset); offset += 4;\n        result = [];\n        for (var i = numPoints; i > 0; i--) {\n          var x = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset); offset += 8;\n          var y = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset); offset += 8;\n          result.push({x: x, y: y});\n        }\n        break;\n      case 3: // WKBPolygon\n        var numRings = byteOrder ? buffer.readUInt32LE(offset) : buffer.readUInt32BE(offset); offset += 4;\n        result = [];\n        for (var i = numRings; i > 0; i--) {\n          var numPoints = byteOrder ? buffer.readUInt32LE(offset) : buffer.readUInt32BE(offset); offset += 4;\n          var line = [];\n          for (var j = numPoints; j > 0; j--) {\n            var x = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset); offset += 8;\n            var y = byteOrder ? buffer.readDoubleLE(offset) : buffer.readDoubleBE(offset); offset += 8;\n            line.push({x: x, y: y});\n          }\n          result.push(line);\n        }\n        break;\n      case 4: // WKBMultiPoint\n      case 5: // WKBMultiLineString\n      case 6: // WKBMultiPolygon\n      case 7: // WKBGeometryCollection\n        var num = byteOrder ? buffer.readUInt32LE(offset) : buffer.readUInt32BE(offset); offset += 4;\n        var result = [];\n        for (var i = num; i > 0; i--) {\n          result.push(parseGeometry());\n        }\n        break;\n    }\n    return result;\n  }\n  return parseGeometry();\n};\n\nParser.prototype.reachedPacketEnd = function() {\n  return this._offset === this._packetEnd;\n};\n\nParser.prototype.incrementPacketNumber = function() {\n  var currentPacketNumber = this._nextPacketNumber;\n  this._nextPacketNumber = (this._nextPacketNumber + 1) % 256;\n\n  return currentPacketNumber;\n};\n\nParser.prototype.resetPacketNumber = function() {\n  this._nextPacketNumber = 0;\n};\n\nParser.prototype.packetLength = function packetLength() {\n  if (!this._packetHeader) {\n    return null;\n  }\n\n  return this._packetHeader.length + this._longPacketBuffers.size;\n};\n\nParser.prototype._combineNextBuffers = function _combineNextBuffers(bytes) {\n  var length = this._buffer.length - this._offset;\n\n  if (length >= bytes) {\n    return true;\n  }\n\n  if ((length + this._nextBuffers.size) < bytes) {\n    return false;\n  }\n\n  var buffers     = [];\n  var bytesNeeded = bytes - length;\n\n  while (bytesNeeded > 0) {\n    var buffer = this._nextBuffers.shift();\n    buffers.push(buffer);\n    bytesNeeded -= buffer.length;\n  }\n\n  this.append(buffers);\n  return true;\n};\n\nParser.prototype._combineLongPacketBuffers = function _combineLongPacketBuffers() {\n  if (!this._longPacketBuffers.size) {\n    return;\n  }\n\n  // Calculate bytes\n  var remainingBytes      = this._buffer.length - this._offset;\n  var trailingPacketBytes = this._buffer.length - this._packetEnd;\n\n  // Create buffer\n  var buf    = null;\n  var buffer = Buffer.allocUnsafe(remainingBytes + this._longPacketBuffers.size);\n  var offset = 0;\n\n  // Copy long buffers\n  while ((buf = this._longPacketBuffers.shift())) {\n    offset += buf.copy(buffer, offset);\n  }\n\n  // Copy remaining bytes\n  this._buffer.copy(buffer, offset, this._offset);\n\n  this._buffer       = buffer;\n  this._offset       = 0;\n  this._packetEnd    = this._buffer.length - trailingPacketBytes;\n  this._packetOffset = 0;\n};\n\nParser.prototype._parsePacket = function _parsePacket(packetHeader) {\n  this._packetEnd    = this._offset + packetHeader.length;\n  this._packetOffset = this._offset;\n\n  if (packetHeader.length === MAX_PACKET_LENGTH) {\n    this._longPacketBuffers.push(this._buffer.slice(this._packetOffset, this._packetEnd));\n    this._advanceToNextPacket();\n    return;\n  }\n\n  this._combineLongPacketBuffers();\n\n  var hadException = true;\n  try {\n    this._onPacket(packetHeader);\n    hadException = false;\n  } catch (err) {\n    if (!err || typeof err.code !== 'string' || err.code.substr(0, 7) !== 'PARSER_') {\n      throw err; // Rethrow non-MySQL errors\n    }\n\n    // Pass down parser errors\n    this._onError(err);\n    hadException = false;\n  } finally {\n    this._advanceToNextPacket();\n\n    // If there was an exception, the parser while loop will be broken out\n    // of after the finally block. So schedule a blank write to re-enter it\n    // to continue parsing any bytes that may already have been received.\n    if (hadException) {\n      process.nextTick(this.write.bind(this));\n    }\n  }\n};\n\nParser.prototype._tryReadPacketHeader = function _tryReadPacketHeader() {\n  if (this._packetHeader) {\n    return this._packetHeader;\n  }\n\n  if (!this._combineNextBuffers(PACKET_HEADER_LENGTH)) {\n    return null;\n  }\n\n  this._packetHeader = new PacketHeader(\n    this.parseUnsignedNumber(3),\n    this.parseUnsignedNumber(1)\n  );\n\n  if (this._packetHeader.number !== this._nextPacketNumber) {\n    var err = new Error(\n      'Packets out of order. Got: ' + this._packetHeader.number + ' ' +\n      'Expected: ' + this._nextPacketNumber\n    );\n\n    err.code  = 'PROTOCOL_PACKETS_OUT_OF_ORDER';\n    err.fatal = true;\n\n    this._onError(err);\n  }\n\n  this.incrementPacketNumber();\n\n  return this._packetHeader;\n};\n\nParser.prototype._advanceToNextPacket = function() {\n  this._offset       = this._packetEnd;\n  this._packetHeader = null;\n  this._packetEnd    = null;\n  this._packetOffset = null;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}