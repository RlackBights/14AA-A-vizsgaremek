{"ast":null,"code":"\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// NOTE: Due to 'stream' module being pretty large (~100Kb, significant in browser environments), \n// we opt to dependency-inject it instead of creating a hard dependency.\nmodule.exports = function (stream_module) {\n  var Transform = stream_module.Transform;\n\n  // == Encoder stream =======================================================\n\n  function IconvLiteEncoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n    Transform.call(this, options);\n  }\n  IconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: {\n      value: IconvLiteEncoderStream\n    }\n  });\n  IconvLiteEncoderStream.prototype._transform = function (chunk, encoding, done) {\n    if (typeof chunk != 'string') return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n    try {\n      var res = this.conv.write(chunk);\n      if (res && res.length) this.push(res);\n      done();\n    } catch (e) {\n      done(e);\n    }\n  };\n  IconvLiteEncoderStream.prototype._flush = function (done) {\n    try {\n      var res = this.conv.end();\n      if (res && res.length) this.push(res);\n      done();\n    } catch (e) {\n      done(e);\n    }\n  };\n  IconvLiteEncoderStream.prototype.collect = function (cb) {\n    var chunks = [];\n    this.on('error', cb);\n    this.on('data', function (chunk) {\n      chunks.push(chunk);\n    });\n    this.on('end', function () {\n      cb(null, Buffer.concat(chunks));\n    });\n    return this;\n  };\n\n  // == Decoder stream =======================================================\n\n  function IconvLiteDecoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.encoding = this.encoding = 'utf8'; // We output strings.\n    Transform.call(this, options);\n  }\n  IconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: {\n      value: IconvLiteDecoderStream\n    }\n  });\n  IconvLiteDecoderStream.prototype._transform = function (chunk, encoding, done) {\n    if (!Buffer.isBuffer(chunk) && !(chunk instanceof Uint8Array)) return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n    try {\n      var res = this.conv.write(chunk);\n      if (res && res.length) this.push(res, this.encoding);\n      done();\n    } catch (e) {\n      done(e);\n    }\n  };\n  IconvLiteDecoderStream.prototype._flush = function (done) {\n    try {\n      var res = this.conv.end();\n      if (res && res.length) this.push(res, this.encoding);\n      done();\n    } catch (e) {\n      done(e);\n    }\n  };\n  IconvLiteDecoderStream.prototype.collect = function (cb) {\n    var res = '';\n    this.on('error', cb);\n    this.on('data', function (chunk) {\n      res += chunk;\n    });\n    this.on('end', function () {\n      cb(null, res);\n    });\n    return this;\n  };\n  return {\n    IconvLiteEncoderStream: IconvLiteEncoderStream,\n    IconvLiteDecoderStream: IconvLiteDecoderStream\n  };\n};","map":{"version":3,"names":["Buffer","require","module","exports","stream_module","Transform","IconvLiteEncoderStream","conv","options","decodeStrings","call","prototype","Object","create","constructor","value","_transform","chunk","encoding","done","Error","res","write","length","push","e","_flush","end","collect","cb","chunks","on","concat","IconvLiteDecoderStream","isBuffer","Uint8Array"],"sources":["C:/Users/Levi/Documents/szakdoga/vizsgaremek/node_modules/iconv-lite/lib/streams.js"],"sourcesContent":["\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// NOTE: Due to 'stream' module being pretty large (~100Kb, significant in browser environments), \n// we opt to dependency-inject it instead of creating a hard dependency.\nmodule.exports = function(stream_module) {\n    var Transform = stream_module.Transform;\n\n    // == Encoder stream =======================================================\n\n    function IconvLiteEncoderStream(conv, options) {\n        this.conv = conv;\n        options = options || {};\n        options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n        Transform.call(this, options);\n    }\n\n    IconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n        constructor: { value: IconvLiteEncoderStream }\n    });\n\n    IconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n        if (typeof chunk != 'string')\n            return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n        try {\n            var res = this.conv.write(chunk);\n            if (res && res.length) this.push(res);\n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteEncoderStream.prototype._flush = function(done) {\n        try {\n            var res = this.conv.end();\n            if (res && res.length) this.push(res);\n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteEncoderStream.prototype.collect = function(cb) {\n        var chunks = [];\n        this.on('error', cb);\n        this.on('data', function(chunk) { chunks.push(chunk); });\n        this.on('end', function() {\n            cb(null, Buffer.concat(chunks));\n        });\n        return this;\n    }\n\n\n    // == Decoder stream =======================================================\n\n    function IconvLiteDecoderStream(conv, options) {\n        this.conv = conv;\n        options = options || {};\n        options.encoding = this.encoding = 'utf8'; // We output strings.\n        Transform.call(this, options);\n    }\n\n    IconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n        constructor: { value: IconvLiteDecoderStream }\n    });\n\n    IconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n        if (!Buffer.isBuffer(chunk) && !(chunk instanceof Uint8Array))\n            return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n        try {\n            var res = this.conv.write(chunk);\n            if (res && res.length) this.push(res, this.encoding);\n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteDecoderStream.prototype._flush = function(done) {\n        try {\n            var res = this.conv.end();\n            if (res && res.length) this.push(res, this.encoding);                \n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteDecoderStream.prototype.collect = function(cb) {\n        var res = '';\n        this.on('error', cb);\n        this.on('data', function(chunk) { res += chunk; });\n        this.on('end', function() {\n            cb(null, res);\n        });\n        return this;\n    }\n\n    return {\n        IconvLiteEncoderStream: IconvLiteEncoderStream,\n        IconvLiteDecoderStream: IconvLiteDecoderStream,\n    };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}