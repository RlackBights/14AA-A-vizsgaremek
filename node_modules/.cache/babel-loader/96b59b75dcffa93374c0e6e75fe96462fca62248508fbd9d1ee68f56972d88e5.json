{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clear = clear;\nvar _utils = require(\"./utils\");\nvar _type = require(\"./type\");\nfunction clear(element) {\n  var _element$selectionSta, _element$selectionEnd;\n  if (!(0, _utils.isElementType)(element, ['input', 'textarea'])) {\n    // TODO: support contenteditable\n    throw new Error('clear currently only supports input and textarea elements.');\n  }\n  if ((0, _utils.isDisabled)(element)) {\n    return;\n  } // TODO: track the selection range ourselves so we don't have to do this input \"type\" trickery\n  // just like cypress does: https://github.com/cypress-io/cypress/blob/8d7f1a0bedc3c45a2ebf1ff50324b34129fdc683/packages/driver/src/dom/selection.ts#L16-L37\n\n  const elementType = element.type;\n  if (elementType !== 'textarea') {\n    // setSelectionRange is not supported on certain types of inputs, e.g. \"number\" or \"email\"\n    ;\n    element.type = 'text';\n  }\n  (0, _type.type)(element, '{selectall}{del}', {\n    delay: 0,\n    initialSelectionStart: (_element$selectionSta = element.selectionStart) != null ? _element$selectionSta : /* istanbul ignore next */\n    undefined,\n    initialSelectionEnd: (_element$selectionEnd = element.selectionEnd) != null ? _element$selectionEnd : /* istanbul ignore next */\n    undefined\n  });\n  if (elementType !== 'textarea') {\n    ;\n    element.type = elementType;\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","clear","_utils","require","_type","element","_element$selectionSta","_element$selectionEnd","isElementType","Error","isDisabled","elementType","type","delay","initialSelectionStart","selectionStart","undefined","initialSelectionEnd","selectionEnd"],"sources":["D:/BNH/vizsgaremek/node_modules/@testing-library/user-event/dist/clear.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clear = clear;\n\nvar _utils = require(\"./utils\");\n\nvar _type = require(\"./type\");\n\nfunction clear(element) {\n  var _element$selectionSta, _element$selectionEnd;\n\n  if (!(0, _utils.isElementType)(element, ['input', 'textarea'])) {\n    // TODO: support contenteditable\n    throw new Error('clear currently only supports input and textarea elements.');\n  }\n\n  if ((0, _utils.isDisabled)(element)) {\n    return;\n  } // TODO: track the selection range ourselves so we don't have to do this input \"type\" trickery\n  // just like cypress does: https://github.com/cypress-io/cypress/blob/8d7f1a0bedc3c45a2ebf1ff50324b34129fdc683/packages/driver/src/dom/selection.ts#L16-L37\n\n\n  const elementType = element.type;\n\n  if (elementType !== 'textarea') {\n    // setSelectionRange is not supported on certain types of inputs, e.g. \"number\" or \"email\"\n    ;\n    element.type = 'text';\n  }\n\n  (0, _type.type)(element, '{selectall}{del}', {\n    delay: 0,\n    initialSelectionStart: (_element$selectionSta = element.selectionStart) != null ? _element$selectionSta :\n    /* istanbul ignore next */\n    undefined,\n    initialSelectionEnd: (_element$selectionEnd = element.selectionEnd) != null ? _element$selectionEnd :\n    /* istanbul ignore next */\n    undefined\n  });\n\n  if (elementType !== 'textarea') {\n    ;\n    element.type = elementType;\n  }\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,KAAK,GAAGA,KAAK;AAErB,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAS,CAAC;AAE/B,IAAIC,KAAK,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAE7B,SAASF,KAAKA,CAACI,OAAO,EAAE;EACtB,IAAIC,qBAAqB,EAAEC,qBAAqB;EAEhD,IAAI,CAAC,CAAC,CAAC,EAAEL,MAAM,CAACM,aAAa,EAAEH,OAAO,EAAE,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,EAAE;IAC9D;IACA,MAAM,IAAII,KAAK,CAAC,4DAA4D,CAAC;EAC/E;EAEA,IAAI,CAAC,CAAC,EAAEP,MAAM,CAACQ,UAAU,EAAEL,OAAO,CAAC,EAAE;IACnC;EACF,CAAC,CAAC;EACF;;EAGA,MAAMM,WAAW,GAAGN,OAAO,CAACO,IAAI;EAEhC,IAAID,WAAW,KAAK,UAAU,EAAE;IAC9B;IACA;IACAN,OAAO,CAACO,IAAI,GAAG,MAAM;EACvB;EAEA,CAAC,CAAC,EAAER,KAAK,CAACQ,IAAI,EAAEP,OAAO,EAAE,kBAAkB,EAAE;IAC3CQ,KAAK,EAAE,CAAC;IACRC,qBAAqB,EAAE,CAACR,qBAAqB,GAAGD,OAAO,CAACU,cAAc,KAAK,IAAI,GAAGT,qBAAqB,GACvG;IACAU,SAAS;IACTC,mBAAmB,EAAE,CAACV,qBAAqB,GAAGF,OAAO,CAACa,YAAY,KAAK,IAAI,GAAGX,qBAAqB,GACnG;IACAS;EACF,CAAC,CAAC;EAEF,IAAIL,WAAW,KAAK,UAAU,EAAE;IAC9B;IACAN,OAAO,CAACO,IAAI,GAAGD,WAAW;EAC5B;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}