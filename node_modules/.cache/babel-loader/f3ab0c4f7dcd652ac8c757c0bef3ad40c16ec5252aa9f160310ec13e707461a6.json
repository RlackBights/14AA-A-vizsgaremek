{"ast":null,"code":"// http://dev.mysql.com/doc/internals/en/ssl.html\n// http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::SSLRequest\n\nvar ClientConstants = require('../constants/client');\nmodule.exports = SSLRequestPacket;\nfunction SSLRequestPacket(options) {\n  options = options || {};\n  this.clientFlags = options.clientFlags | ClientConstants.CLIENT_SSL;\n  this.maxPacketSize = options.maxPacketSize;\n  this.charsetNumber = options.charsetNumber;\n}\nSSLRequestPacket.prototype.parse = function (parser) {\n  // TODO: check SSLRequest packet v41 vs pre v41\n  this.clientFlags = parser.parseUnsignedNumber(4);\n  this.maxPacketSize = parser.parseUnsignedNumber(4);\n  this.charsetNumber = parser.parseUnsignedNumber(1);\n};\nSSLRequestPacket.prototype.write = function (writer) {\n  writer.writeUnsignedNumber(4, this.clientFlags);\n  writer.writeUnsignedNumber(4, this.maxPacketSize);\n  writer.writeUnsignedNumber(1, this.charsetNumber);\n  writer.writeFiller(23);\n};","map":{"version":3,"names":["ClientConstants","require","module","exports","SSLRequestPacket","options","clientFlags","CLIENT_SSL","maxPacketSize","charsetNumber","prototype","parse","parser","parseUnsignedNumber","write","writer","writeUnsignedNumber","writeFiller"],"sources":["D:/BNH/vizsgaremek/node_modules/mysql/lib/protocol/packets/SSLRequestPacket.js"],"sourcesContent":["// http://dev.mysql.com/doc/internals/en/ssl.html\n// http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::SSLRequest\n\nvar ClientConstants = require('../constants/client');\n\nmodule.exports = SSLRequestPacket;\n\nfunction SSLRequestPacket(options) {\n  options = options || {};\n  this.clientFlags   = options.clientFlags | ClientConstants.CLIENT_SSL;\n  this.maxPacketSize = options.maxPacketSize;\n  this.charsetNumber = options.charsetNumber;\n}\n\nSSLRequestPacket.prototype.parse = function(parser) {\n  // TODO: check SSLRequest packet v41 vs pre v41\n  this.clientFlags   = parser.parseUnsignedNumber(4);\n  this.maxPacketSize = parser.parseUnsignedNumber(4);\n  this.charsetNumber = parser.parseUnsignedNumber(1);\n};\n\nSSLRequestPacket.prototype.write = function(writer) {\n  writer.writeUnsignedNumber(4, this.clientFlags);\n  writer.writeUnsignedNumber(4, this.maxPacketSize);\n  writer.writeUnsignedNumber(1, this.charsetNumber);\n  writer.writeFiller(23);\n};\n"],"mappings":"AAAA;AACA;;AAEA,IAAIA,eAAe,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAEpDC,MAAM,CAACC,OAAO,GAAGC,gBAAgB;AAEjC,SAASA,gBAAgBA,CAACC,OAAO,EAAE;EACjCA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EACvB,IAAI,CAACC,WAAW,GAAKD,OAAO,CAACC,WAAW,GAAGN,eAAe,CAACO,UAAU;EACrE,IAAI,CAACC,aAAa,GAAGH,OAAO,CAACG,aAAa;EAC1C,IAAI,CAACC,aAAa,GAAGJ,OAAO,CAACI,aAAa;AAC5C;AAEAL,gBAAgB,CAACM,SAAS,CAACC,KAAK,GAAG,UAASC,MAAM,EAAE;EAClD;EACA,IAAI,CAACN,WAAW,GAAKM,MAAM,CAACC,mBAAmB,CAAC,CAAC,CAAC;EAClD,IAAI,CAACL,aAAa,GAAGI,MAAM,CAACC,mBAAmB,CAAC,CAAC,CAAC;EAClD,IAAI,CAACJ,aAAa,GAAGG,MAAM,CAACC,mBAAmB,CAAC,CAAC,CAAC;AACpD,CAAC;AAEDT,gBAAgB,CAACM,SAAS,CAACI,KAAK,GAAG,UAASC,MAAM,EAAE;EAClDA,MAAM,CAACC,mBAAmB,CAAC,CAAC,EAAE,IAAI,CAACV,WAAW,CAAC;EAC/CS,MAAM,CAACC,mBAAmB,CAAC,CAAC,EAAE,IAAI,CAACR,aAAa,CAAC;EACjDO,MAAM,CAACC,mBAAmB,CAAC,CAAC,EAAE,IAAI,CAACP,aAAa,CAAC;EACjDM,MAAM,CAACE,WAAW,CAAC,EAAE,CAAC;AACxB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}