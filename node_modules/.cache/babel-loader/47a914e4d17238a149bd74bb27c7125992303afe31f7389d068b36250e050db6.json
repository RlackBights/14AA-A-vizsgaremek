{"ast":null,"code":"var Buffer = require('safe-buffer').Buffer;\nvar Client = require('../constants/client');\nmodule.exports = HandshakeInitializationPacket;\nfunction HandshakeInitializationPacket(options) {\n  options = options || {};\n  this.protocolVersion = options.protocolVersion;\n  this.serverVersion = options.serverVersion;\n  this.threadId = options.threadId;\n  this.scrambleBuff1 = options.scrambleBuff1;\n  this.filler1 = options.filler1;\n  this.serverCapabilities1 = options.serverCapabilities1;\n  this.serverLanguage = options.serverLanguage;\n  this.serverStatus = options.serverStatus;\n  this.serverCapabilities2 = options.serverCapabilities2;\n  this.scrambleLength = options.scrambleLength;\n  this.filler2 = options.filler2;\n  this.scrambleBuff2 = options.scrambleBuff2;\n  this.filler3 = options.filler3;\n  this.pluginData = options.pluginData;\n  this.protocol41 = options.protocol41;\n  if (this.protocol41) {\n    // force set the bit in serverCapabilities1\n    this.serverCapabilities1 |= Client.CLIENT_PROTOCOL_41;\n  }\n}\nHandshakeInitializationPacket.prototype.parse = function (parser) {\n  this.protocolVersion = parser.parseUnsignedNumber(1);\n  this.serverVersion = parser.parseNullTerminatedString();\n  this.threadId = parser.parseUnsignedNumber(4);\n  this.scrambleBuff1 = parser.parseBuffer(8);\n  this.filler1 = parser.parseFiller(1);\n  this.serverCapabilities1 = parser.parseUnsignedNumber(2);\n  this.serverLanguage = parser.parseUnsignedNumber(1);\n  this.serverStatus = parser.parseUnsignedNumber(2);\n  this.protocol41 = (this.serverCapabilities1 & 1 << 9) > 0;\n  if (this.protocol41) {\n    this.serverCapabilities2 = parser.parseUnsignedNumber(2);\n    this.scrambleLength = parser.parseUnsignedNumber(1);\n    this.filler2 = parser.parseFiller(10);\n    // scrambleBuff2 should be 0x00 terminated, but sphinx does not do this\n    // so we assume scrambleBuff2 to be 12 byte and treat the next byte as a\n    // filler byte.\n    this.scrambleBuff2 = parser.parseBuffer(12);\n    this.filler3 = parser.parseFiller(1);\n  } else {\n    this.filler2 = parser.parseFiller(13);\n  }\n  if (parser.reachedPacketEnd()) {\n    return;\n  }\n\n  // According to the docs this should be 0x00 terminated, but MariaDB does\n  // not do this, so we assume this string to be packet terminated.\n  this.pluginData = parser.parsePacketTerminatedString();\n\n  // However, if there is a trailing '\\0', strip it\n  var lastChar = this.pluginData.length - 1;\n  if (this.pluginData[lastChar] === '\\0') {\n    this.pluginData = this.pluginData.substr(0, lastChar);\n  }\n};\nHandshakeInitializationPacket.prototype.write = function (writer) {\n  writer.writeUnsignedNumber(1, this.protocolVersion);\n  writer.writeNullTerminatedString(this.serverVersion);\n  writer.writeUnsignedNumber(4, this.threadId);\n  writer.writeBuffer(this.scrambleBuff1);\n  writer.writeFiller(1);\n  writer.writeUnsignedNumber(2, this.serverCapabilities1);\n  writer.writeUnsignedNumber(1, this.serverLanguage);\n  writer.writeUnsignedNumber(2, this.serverStatus);\n  if (this.protocol41) {\n    writer.writeUnsignedNumber(2, this.serverCapabilities2);\n    writer.writeUnsignedNumber(1, this.scrambleLength);\n    writer.writeFiller(10);\n  }\n  writer.writeNullTerminatedBuffer(this.scrambleBuff2);\n  if (this.pluginData !== undefined) {\n    writer.writeNullTerminatedString(this.pluginData);\n  }\n};\nHandshakeInitializationPacket.prototype.scrambleBuff = function () {\n  var buffer = null;\n  if (typeof this.scrambleBuff2 === 'undefined') {\n    buffer = Buffer.from(this.scrambleBuff1);\n  } else {\n    buffer = Buffer.allocUnsafe(this.scrambleBuff1.length + this.scrambleBuff2.length);\n    this.scrambleBuff1.copy(buffer, 0);\n    this.scrambleBuff2.copy(buffer, this.scrambleBuff1.length);\n  }\n  return buffer;\n};","map":{"version":3,"names":["Buffer","require","Client","module","exports","HandshakeInitializationPacket","options","protocolVersion","serverVersion","threadId","scrambleBuff1","filler1","serverCapabilities1","serverLanguage","serverStatus","serverCapabilities2","scrambleLength","filler2","scrambleBuff2","filler3","pluginData","protocol41","CLIENT_PROTOCOL_41","prototype","parse","parser","parseUnsignedNumber","parseNullTerminatedString","parseBuffer","parseFiller","reachedPacketEnd","parsePacketTerminatedString","lastChar","length","substr","write","writer","writeUnsignedNumber","writeNullTerminatedString","writeBuffer","writeFiller","writeNullTerminatedBuffer","undefined","scrambleBuff","buffer","from","allocUnsafe","copy"],"sources":["D:/BNH/vizsgaremek/node_modules/mysql/lib/protocol/packets/HandshakeInitializationPacket.js"],"sourcesContent":["var Buffer = require('safe-buffer').Buffer;\nvar Client = require('../constants/client');\n\nmodule.exports = HandshakeInitializationPacket;\nfunction HandshakeInitializationPacket(options) {\n  options = options || {};\n\n  this.protocolVersion     = options.protocolVersion;\n  this.serverVersion       = options.serverVersion;\n  this.threadId            = options.threadId;\n  this.scrambleBuff1       = options.scrambleBuff1;\n  this.filler1             = options.filler1;\n  this.serverCapabilities1 = options.serverCapabilities1;\n  this.serverLanguage      = options.serverLanguage;\n  this.serverStatus        = options.serverStatus;\n  this.serverCapabilities2 = options.serverCapabilities2;\n  this.scrambleLength      = options.scrambleLength;\n  this.filler2             = options.filler2;\n  this.scrambleBuff2       = options.scrambleBuff2;\n  this.filler3             = options.filler3;\n  this.pluginData          = options.pluginData;\n  this.protocol41          = options.protocol41;\n\n  if (this.protocol41) {\n    // force set the bit in serverCapabilities1\n    this.serverCapabilities1 |= Client.CLIENT_PROTOCOL_41;\n  }\n}\n\nHandshakeInitializationPacket.prototype.parse = function(parser) {\n  this.protocolVersion     = parser.parseUnsignedNumber(1);\n  this.serverVersion       = parser.parseNullTerminatedString();\n  this.threadId            = parser.parseUnsignedNumber(4);\n  this.scrambleBuff1       = parser.parseBuffer(8);\n  this.filler1             = parser.parseFiller(1);\n  this.serverCapabilities1 = parser.parseUnsignedNumber(2);\n  this.serverLanguage      = parser.parseUnsignedNumber(1);\n  this.serverStatus        = parser.parseUnsignedNumber(2);\n\n  this.protocol41          = (this.serverCapabilities1 & (1 << 9)) > 0;\n\n  if (this.protocol41) {\n    this.serverCapabilities2 = parser.parseUnsignedNumber(2);\n    this.scrambleLength      = parser.parseUnsignedNumber(1);\n    this.filler2             = parser.parseFiller(10);\n    // scrambleBuff2 should be 0x00 terminated, but sphinx does not do this\n    // so we assume scrambleBuff2 to be 12 byte and treat the next byte as a\n    // filler byte.\n    this.scrambleBuff2       = parser.parseBuffer(12);\n    this.filler3             = parser.parseFiller(1);\n  } else {\n    this.filler2             = parser.parseFiller(13);\n  }\n\n  if (parser.reachedPacketEnd()) {\n    return;\n  }\n\n  // According to the docs this should be 0x00 terminated, but MariaDB does\n  // not do this, so we assume this string to be packet terminated.\n  this.pluginData = parser.parsePacketTerminatedString();\n\n  // However, if there is a trailing '\\0', strip it\n  var lastChar = this.pluginData.length - 1;\n  if (this.pluginData[lastChar] === '\\0') {\n    this.pluginData = this.pluginData.substr(0, lastChar);\n  }\n};\n\nHandshakeInitializationPacket.prototype.write = function(writer) {\n  writer.writeUnsignedNumber(1, this.protocolVersion);\n  writer.writeNullTerminatedString(this.serverVersion);\n  writer.writeUnsignedNumber(4, this.threadId);\n  writer.writeBuffer(this.scrambleBuff1);\n  writer.writeFiller(1);\n  writer.writeUnsignedNumber(2, this.serverCapabilities1);\n  writer.writeUnsignedNumber(1, this.serverLanguage);\n  writer.writeUnsignedNumber(2, this.serverStatus);\n  if (this.protocol41) {\n    writer.writeUnsignedNumber(2, this.serverCapabilities2);\n    writer.writeUnsignedNumber(1, this.scrambleLength);\n    writer.writeFiller(10);\n  }\n  writer.writeNullTerminatedBuffer(this.scrambleBuff2);\n\n  if (this.pluginData !== undefined) {\n    writer.writeNullTerminatedString(this.pluginData);\n  }\n};\n\nHandshakeInitializationPacket.prototype.scrambleBuff = function() {\n  var buffer = null;\n\n  if (typeof this.scrambleBuff2 === 'undefined') {\n    buffer = Buffer.from(this.scrambleBuff1);\n  } else {\n    buffer = Buffer.allocUnsafe(this.scrambleBuff1.length + this.scrambleBuff2.length);\n    this.scrambleBuff1.copy(buffer, 0);\n    this.scrambleBuff2.copy(buffer, this.scrambleBuff1.length);\n  }\n\n  return buffer;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}