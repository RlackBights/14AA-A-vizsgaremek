{"ast":null,"code":"var inherits = require('util').inherits;\nvar Connection = require('./Connection');\nvar Events = require('events');\nmodule.exports = PoolConnection;\ninherits(PoolConnection, Connection);\nfunction PoolConnection(pool, options) {\n  Connection.call(this, options);\n  this._pool = pool;\n\n  // Bind connection to pool domain\n  if (Events.usingDomains) {\n    this.domain = pool.domain;\n  }\n\n  // When a fatal error occurs the connection's protocol ends, which will cause\n  // the connection to end as well, thus we only need to watch for the end event\n  // and we will be notified of disconnects.\n  this.on('end', this._removeFromPool);\n  this.on('error', function (err) {\n    if (err.fatal) {\n      this._removeFromPool();\n    }\n  });\n}\nPoolConnection.prototype.release = function release() {\n  var pool = this._pool;\n  if (!pool || pool._closed) {\n    return undefined;\n  }\n  return pool.releaseConnection(this);\n};\n\n// TODO: Remove this when we are removing PoolConnection#end\nPoolConnection.prototype._realEnd = Connection.prototype.end;\nPoolConnection.prototype.end = function () {\n  console.warn('Calling conn.end() to release a pooled connection is ' + 'deprecated. In next version calling conn.end() will be ' + 'restored to default conn.end() behavior. Use ' + 'conn.release() instead.');\n  this.release();\n};\nPoolConnection.prototype.destroy = function () {\n  Connection.prototype.destroy.apply(this, arguments);\n  this._removeFromPool(this);\n};\nPoolConnection.prototype._removeFromPool = function _removeFromPool() {\n  if (!this._pool || this._pool._closed) {\n    return;\n  }\n  var pool = this._pool;\n  this._pool = null;\n  pool._purgeConnection(this);\n};","map":{"version":3,"names":["inherits","require","Connection","Events","module","exports","PoolConnection","pool","options","call","_pool","usingDomains","domain","on","_removeFromPool","err","fatal","prototype","release","_closed","undefined","releaseConnection","_realEnd","end","console","warn","destroy","apply","arguments","_purgeConnection"],"sources":["D:/BNH/vizsgaremek/node_modules/mysql/lib/PoolConnection.js"],"sourcesContent":["var inherits   = require('util').inherits;\nvar Connection = require('./Connection');\nvar Events     = require('events');\n\nmodule.exports = PoolConnection;\ninherits(PoolConnection, Connection);\n\nfunction PoolConnection(pool, options) {\n  Connection.call(this, options);\n  this._pool  = pool;\n\n  // Bind connection to pool domain\n  if (Events.usingDomains) {\n    this.domain = pool.domain;\n  }\n\n  // When a fatal error occurs the connection's protocol ends, which will cause\n  // the connection to end as well, thus we only need to watch for the end event\n  // and we will be notified of disconnects.\n  this.on('end', this._removeFromPool);\n  this.on('error', function (err) {\n    if (err.fatal) {\n      this._removeFromPool();\n    }\n  });\n}\n\nPoolConnection.prototype.release = function release() {\n  var pool = this._pool;\n\n  if (!pool || pool._closed) {\n    return undefined;\n  }\n\n  return pool.releaseConnection(this);\n};\n\n// TODO: Remove this when we are removing PoolConnection#end\nPoolConnection.prototype._realEnd = Connection.prototype.end;\n\nPoolConnection.prototype.end = function () {\n  console.warn(\n    'Calling conn.end() to release a pooled connection is ' +\n    'deprecated. In next version calling conn.end() will be ' +\n    'restored to default conn.end() behavior. Use ' +\n    'conn.release() instead.'\n  );\n  this.release();\n};\n\nPoolConnection.prototype.destroy = function () {\n  Connection.prototype.destroy.apply(this, arguments);\n  this._removeFromPool(this);\n};\n\nPoolConnection.prototype._removeFromPool = function _removeFromPool() {\n  if (!this._pool || this._pool._closed) {\n    return;\n  }\n\n  var pool = this._pool;\n  this._pool = null;\n\n  pool._purgeConnection(this);\n};\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAKC,OAAO,CAAC,MAAM,CAAC,CAACD,QAAQ;AACzC,IAAIE,UAAU,GAAGD,OAAO,CAAC,cAAc,CAAC;AACxC,IAAIE,MAAM,GAAOF,OAAO,CAAC,QAAQ,CAAC;AAElCG,MAAM,CAACC,OAAO,GAAGC,cAAc;AAC/BN,QAAQ,CAACM,cAAc,EAAEJ,UAAU,CAAC;AAEpC,SAASI,cAAcA,CAACC,IAAI,EAAEC,OAAO,EAAE;EACrCN,UAAU,CAACO,IAAI,CAAC,IAAI,EAAED,OAAO,CAAC;EAC9B,IAAI,CAACE,KAAK,GAAIH,IAAI;;EAElB;EACA,IAAIJ,MAAM,CAACQ,YAAY,EAAE;IACvB,IAAI,CAACC,MAAM,GAAGL,IAAI,CAACK,MAAM;EAC3B;;EAEA;EACA;EACA;EACA,IAAI,CAACC,EAAE,CAAC,KAAK,EAAE,IAAI,CAACC,eAAe,CAAC;EACpC,IAAI,CAACD,EAAE,CAAC,OAAO,EAAE,UAAUE,GAAG,EAAE;IAC9B,IAAIA,GAAG,CAACC,KAAK,EAAE;MACb,IAAI,CAACF,eAAe,CAAC,CAAC;IACxB;EACF,CAAC,CAAC;AACJ;AAEAR,cAAc,CAACW,SAAS,CAACC,OAAO,GAAG,SAASA,OAAOA,CAAA,EAAG;EACpD,IAAIX,IAAI,GAAG,IAAI,CAACG,KAAK;EAErB,IAAI,CAACH,IAAI,IAAIA,IAAI,CAACY,OAAO,EAAE;IACzB,OAAOC,SAAS;EAClB;EAEA,OAAOb,IAAI,CAACc,iBAAiB,CAAC,IAAI,CAAC;AACrC,CAAC;;AAED;AACAf,cAAc,CAACW,SAAS,CAACK,QAAQ,GAAGpB,UAAU,CAACe,SAAS,CAACM,GAAG;AAE5DjB,cAAc,CAACW,SAAS,CAACM,GAAG,GAAG,YAAY;EACzCC,OAAO,CAACC,IAAI,CACV,uDAAuD,GACvD,yDAAyD,GACzD,+CAA+C,GAC/C,yBACF,CAAC;EACD,IAAI,CAACP,OAAO,CAAC,CAAC;AAChB,CAAC;AAEDZ,cAAc,CAACW,SAAS,CAACS,OAAO,GAAG,YAAY;EAC7CxB,UAAU,CAACe,SAAS,CAACS,OAAO,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;EACnD,IAAI,CAACd,eAAe,CAAC,IAAI,CAAC;AAC5B,CAAC;AAEDR,cAAc,CAACW,SAAS,CAACH,eAAe,GAAG,SAASA,eAAeA,CAAA,EAAG;EACpE,IAAI,CAAC,IAAI,CAACJ,KAAK,IAAI,IAAI,CAACA,KAAK,CAACS,OAAO,EAAE;IACrC;EACF;EAEA,IAAIZ,IAAI,GAAG,IAAI,CAACG,KAAK;EACrB,IAAI,CAACA,KAAK,GAAG,IAAI;EAEjBH,IAAI,CAACsB,gBAAgB,CAAC,IAAI,CAAC;AAC7B,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}