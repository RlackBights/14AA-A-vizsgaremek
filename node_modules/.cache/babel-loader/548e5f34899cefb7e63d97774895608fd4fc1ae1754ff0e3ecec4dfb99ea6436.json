{"ast":null,"code":"var Buffer = require('safe-buffer').Buffer;\nvar Crypto = require('crypto');\nvar Auth = exports;\nfunction auth(name, data, options) {\n  options = options || {};\n  switch (name) {\n    case 'mysql_native_password':\n      return Auth.token(options.password, data.slice(0, 20));\n    default:\n      return undefined;\n  }\n}\nAuth.auth = auth;\nfunction sha1(msg) {\n  var hash = Crypto.createHash('sha1');\n  hash.update(msg, 'binary');\n  return hash.digest('binary');\n}\nAuth.sha1 = sha1;\nfunction xor(a, b) {\n  a = Buffer.from(a, 'binary');\n  b = Buffer.from(b, 'binary');\n  var result = Buffer.allocUnsafe(a.length);\n  for (var i = 0; i < a.length; i++) {\n    result[i] = a[i] ^ b[i];\n  }\n  return result;\n}\nAuth.xor = xor;\nAuth.token = function (password, scramble) {\n  if (!password) {\n    return Buffer.alloc(0);\n  }\n\n  // password must be in binary format, not utf8\n  var stage1 = sha1(Buffer.from(password, 'utf8').toString('binary'));\n  var stage2 = sha1(stage1);\n  var stage3 = sha1(scramble.toString('binary') + stage2);\n  return xor(stage3, stage1);\n};\n\n// This is a port of sql/password.c:hash_password which needs to be used for\n// pre-4.1 passwords.\nAuth.hashPassword = function (password) {\n  var nr = [0x5030, 0x5735];\n  var add = 7;\n  var nr2 = [0x1234, 0x5671];\n  var result = Buffer.alloc(8);\n  if (typeof password === 'string') {\n    password = Buffer.from(password);\n  }\n  for (var i = 0; i < password.length; i++) {\n    var c = password[i];\n    if (c === 32 || c === 9) {\n      // skip space in password\n      continue;\n    }\n\n    // nr^= (((nr & 63)+add)*c)+ (nr << 8);\n    // nr = xor(nr, add(mul(add(and(nr, 63), add), c), shl(nr, 8)))\n    nr = this.xor32(nr, this.add32(this.mul32(this.add32(this.and32(nr, [0, 63]), [0, add]), [0, c]), this.shl32(nr, 8)));\n\n    // nr2+=(nr2 << 8) ^ nr;\n    // nr2 = add(nr2, xor(shl(nr2, 8), nr))\n    nr2 = this.add32(nr2, this.xor32(this.shl32(nr2, 8), nr));\n\n    // add+=tmp;\n    add += c;\n  }\n  this.int31Write(result, nr, 0);\n  this.int31Write(result, nr2, 4);\n  return result;\n};\nAuth.randomInit = function (seed1, seed2) {\n  return {\n    max_value: 0x3FFFFFFF,\n    max_value_dbl: 0x3FFFFFFF,\n    seed1: seed1 % 0x3FFFFFFF,\n    seed2: seed2 % 0x3FFFFFFF\n  };\n};\nAuth.myRnd = function (r) {\n  r.seed1 = (r.seed1 * 3 + r.seed2) % r.max_value;\n  r.seed2 = (r.seed1 + r.seed2 + 33) % r.max_value;\n  return r.seed1 / r.max_value_dbl;\n};\nAuth.scramble323 = function (message, password) {\n  if (!password) {\n    return Buffer.alloc(0);\n  }\n  var to = Buffer.allocUnsafe(8);\n  var hashPass = this.hashPassword(password);\n  var hashMessage = this.hashPassword(message.slice(0, 8));\n  var seed1 = this.int32Read(hashPass, 0) ^ this.int32Read(hashMessage, 0);\n  var seed2 = this.int32Read(hashPass, 4) ^ this.int32Read(hashMessage, 4);\n  var r = this.randomInit(seed1, seed2);\n  for (var i = 0; i < 8; i++) {\n    to[i] = Math.floor(this.myRnd(r) * 31) + 64;\n  }\n  var extra = Math.floor(this.myRnd(r) * 31);\n  for (var i = 0; i < 8; i++) {\n    to[i] ^= extra;\n  }\n  return to;\n};\nAuth.xor32 = function (a, b) {\n  return [a[0] ^ b[0], a[1] ^ b[1]];\n};\nAuth.add32 = function (a, b) {\n  var w1 = a[1] + b[1];\n  var w2 = a[0] + b[0] + ((w1 & 0xFFFF0000) >> 16);\n  return [w2 & 0xFFFF, w1 & 0xFFFF];\n};\nAuth.mul32 = function (a, b) {\n  // based on this example of multiplying 32b ints using 16b\n  // http://www.dsprelated.com/showmessage/89790/1.php\n  var w1 = a[1] * b[1];\n  var w2 = (a[1] * b[1] >> 16 & 0xFFFF) + (a[0] * b[1] & 0xFFFF) + (a[1] * b[0] & 0xFFFF);\n  return [w2 & 0xFFFF, w1 & 0xFFFF];\n};\nAuth.and32 = function (a, b) {\n  return [a[0] & b[0], a[1] & b[1]];\n};\nAuth.shl32 = function (a, b) {\n  // assume b is 16 or less\n  var w1 = a[1] << b;\n  var w2 = a[0] << b | (w1 & 0xFFFF0000) >> 16;\n  return [w2 & 0xFFFF, w1 & 0xFFFF];\n};\nAuth.int31Write = function (buffer, number, offset) {\n  buffer[offset] = number[0] >> 8 & 0x7F;\n  buffer[offset + 1] = number[0] & 0xFF;\n  buffer[offset + 2] = number[1] >> 8 & 0xFF;\n  buffer[offset + 3] = number[1] & 0xFF;\n};\nAuth.int32Read = function (buffer, offset) {\n  return (buffer[offset] << 24) + (buffer[offset + 1] << 16) + (buffer[offset + 2] << 8) + buffer[offset + 3];\n};","map":{"version":3,"names":["Buffer","require","Crypto","Auth","exports","auth","name","data","options","token","password","slice","undefined","sha1","msg","hash","createHash","update","digest","xor","a","b","from","result","allocUnsafe","length","i","scramble","alloc","stage1","toString","stage2","stage3","hashPassword","nr","add","nr2","c","xor32","add32","mul32","and32","shl32","int31Write","randomInit","seed1","seed2","max_value","max_value_dbl","myRnd","r","scramble323","message","to","hashPass","hashMessage","int32Read","Math","floor","extra","w1","w2","buffer","number","offset"],"sources":["D:/BNH/vizsgaremek/node_modules/mysql/lib/protocol/Auth.js"],"sourcesContent":["var Buffer = require('safe-buffer').Buffer;\nvar Crypto = require('crypto');\nvar Auth   = exports;\n\nfunction auth(name, data, options) {\n  options = options || {};\n\n  switch (name) {\n    case 'mysql_native_password':\n      return Auth.token(options.password, data.slice(0, 20));\n    default:\n      return undefined;\n  }\n}\nAuth.auth = auth;\n\nfunction sha1(msg) {\n  var hash = Crypto.createHash('sha1');\n  hash.update(msg, 'binary');\n  return hash.digest('binary');\n}\nAuth.sha1 = sha1;\n\nfunction xor(a, b) {\n  a = Buffer.from(a, 'binary');\n  b = Buffer.from(b, 'binary');\n  var result = Buffer.allocUnsafe(a.length);\n  for (var i = 0; i < a.length; i++) {\n    result[i] = (a[i] ^ b[i]);\n  }\n  return result;\n}\nAuth.xor = xor;\n\nAuth.token = function(password, scramble) {\n  if (!password) {\n    return Buffer.alloc(0);\n  }\n\n  // password must be in binary format, not utf8\n  var stage1 = sha1((Buffer.from(password, 'utf8')).toString('binary'));\n  var stage2 = sha1(stage1);\n  var stage3 = sha1(scramble.toString('binary') + stage2);\n  return xor(stage3, stage1);\n};\n\n// This is a port of sql/password.c:hash_password which needs to be used for\n// pre-4.1 passwords.\nAuth.hashPassword = function(password) {\n  var nr     = [0x5030, 0x5735];\n  var add    = 7;\n  var nr2    = [0x1234, 0x5671];\n  var result = Buffer.alloc(8);\n\n  if (typeof password === 'string'){\n    password = Buffer.from(password);\n  }\n\n  for (var i = 0; i < password.length; i++) {\n    var c = password[i];\n    if (c === 32 || c === 9) {\n      // skip space in password\n      continue;\n    }\n\n    // nr^= (((nr & 63)+add)*c)+ (nr << 8);\n    // nr = xor(nr, add(mul(add(and(nr, 63), add), c), shl(nr, 8)))\n    nr = this.xor32(nr, this.add32(this.mul32(this.add32(this.and32(nr, [0, 63]), [0, add]), [0, c]), this.shl32(nr, 8)));\n\n    // nr2+=(nr2 << 8) ^ nr;\n    // nr2 = add(nr2, xor(shl(nr2, 8), nr))\n    nr2 = this.add32(nr2, this.xor32(this.shl32(nr2, 8), nr));\n\n    // add+=tmp;\n    add += c;\n  }\n\n  this.int31Write(result, nr, 0);\n  this.int31Write(result, nr2, 4);\n\n  return result;\n};\n\nAuth.randomInit = function(seed1, seed2) {\n  return {\n    max_value     : 0x3FFFFFFF,\n    max_value_dbl : 0x3FFFFFFF,\n    seed1         : seed1 % 0x3FFFFFFF,\n    seed2         : seed2 % 0x3FFFFFFF\n  };\n};\n\nAuth.myRnd = function(r){\n  r.seed1 = (r.seed1 * 3 + r.seed2) % r.max_value;\n  r.seed2 = (r.seed1 + r.seed2 + 33) % r.max_value;\n\n  return r.seed1 / r.max_value_dbl;\n};\n\nAuth.scramble323 = function(message, password) {\n  if (!password) {\n    return Buffer.alloc(0);\n  }\n\n  var to          = Buffer.allocUnsafe(8);\n  var hashPass    = this.hashPassword(password);\n  var hashMessage = this.hashPassword(message.slice(0, 8));\n  var seed1       = this.int32Read(hashPass, 0) ^ this.int32Read(hashMessage, 0);\n  var seed2       = this.int32Read(hashPass, 4) ^ this.int32Read(hashMessage, 4);\n  var r           = this.randomInit(seed1, seed2);\n\n  for (var i = 0; i < 8; i++){\n    to[i] = Math.floor(this.myRnd(r) * 31) + 64;\n  }\n  var extra = (Math.floor(this.myRnd(r) * 31));\n\n  for (var i = 0; i < 8; i++){\n    to[i] ^= extra;\n  }\n\n  return to;\n};\n\nAuth.xor32 = function(a, b){\n  return [a[0] ^ b[0], a[1] ^ b[1]];\n};\n\nAuth.add32 = function(a, b){\n  var w1 = a[1] + b[1];\n  var w2 = a[0] + b[0] + ((w1 & 0xFFFF0000) >> 16);\n\n  return [w2 & 0xFFFF, w1 & 0xFFFF];\n};\n\nAuth.mul32 = function(a, b){\n  // based on this example of multiplying 32b ints using 16b\n  // http://www.dsprelated.com/showmessage/89790/1.php\n  var w1 = a[1] * b[1];\n  var w2 = (((a[1] * b[1]) >> 16) & 0xFFFF) + ((a[0] * b[1]) & 0xFFFF) + (a[1] * b[0] & 0xFFFF);\n\n  return [w2 & 0xFFFF, w1 & 0xFFFF];\n};\n\nAuth.and32 = function(a, b){\n  return [a[0] & b[0], a[1] & b[1]];\n};\n\nAuth.shl32 = function(a, b){\n  // assume b is 16 or less\n  var w1 = a[1] << b;\n  var w2 = (a[0] << b) | ((w1 & 0xFFFF0000) >> 16);\n\n  return [w2 & 0xFFFF, w1 & 0xFFFF];\n};\n\nAuth.int31Write = function(buffer, number, offset) {\n  buffer[offset] = (number[0] >> 8) & 0x7F;\n  buffer[offset + 1] = (number[0]) & 0xFF;\n  buffer[offset + 2] = (number[1] >> 8) & 0xFF;\n  buffer[offset + 3] = (number[1]) & 0xFF;\n};\n\nAuth.int32Read = function(buffer, offset){\n  return (buffer[offset] << 24)\n       + (buffer[offset + 1] << 16)\n       + (buffer[offset + 2] << 8)\n       + (buffer[offset + 3]);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}