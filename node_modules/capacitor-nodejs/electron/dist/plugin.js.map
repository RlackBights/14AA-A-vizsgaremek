{"version":3,"file":"plugin.js","sources":["../build/electron/src/utils.js","../build/electron/src/implementation.js","../build/electron/src/index.js"],"sourcesContent":["import { delimiter } from 'path';\nexport function joinEnv(...variables) {\n    let envVariable = \"\";\n    for (let index = 0; index < variables.length; index++) {\n        const variable = variables[index];\n        if (!variable)\n            continue;\n        envVariable += variable;\n        if (index < variables.length - 1) {\n            envVariable += delimiter;\n        }\n    }\n    return envVariable;\n}\n//# sourceMappingURL=utils.js.map","import { fork } from 'child_process';\nimport { app } from 'electron';\nimport { join as joinPath } from 'path';\nimport { joinEnv } from './utils';\nclass EngineWatcher {\n    constructor() {\n        this.listeners = [];\n        this._isRunning = false;\n    }\n    setRunning() {\n        this._isRunning = true;\n        while (this.listeners.length > 0) {\n            const listener = this.listeners[0];\n            listener();\n            this.listeners.splice(0, 1);\n        }\n    }\n    isRunning() {\n        return this._isRunning;\n    }\n    whenRunning(callback) {\n        if (this.isRunning()) {\n            callback();\n        }\n        else {\n            this.listeners.push(callback);\n        }\n    }\n}\nexport class CapacitorNodeJSImplementation {\n    constructor(eventNotifier) {\n        this.engineWatcher = new EngineWatcher;\n        this.eventNotifier = eventNotifier;\n    }\n    async startEngine(projectDir) {\n        if (this.nodeProcess !== undefined) {\n            throw new Error('The Node.js engine has already been started.');\n        }\n        const projectPath = joinPath(app.getAppPath(), 'app', projectDir);\n        const projectPackageJsonPath = joinPath(projectPath, \"package.json\");\n        const projectPackageJson = await import(projectPackageJsonPath);\n        const projectMainFile = projectPackageJson.main;\n        const projectMainPath = joinPath(projectPath, projectMainFile);\n        const modulesPaths = joinEnv(projectPackageJsonPath /*, bridgeModulePath, ... */);\n        const nodeParameters = [];\n        const nodeOptions = {\n            env: { NODE_PATH: modulesPaths },\n            serialization: 'json'\n        };\n        this.nodeProcess = fork(projectMainPath, nodeParameters, nodeOptions);\n        this.nodeProcess.on('message', (args) => {\n            this.receiveMessage(args.channelName, args.payload);\n        });\n    }\n    resolveWhenRunning() {\n        return new Promise((resolve, reject) => {\n            if (this.nodeProcess === undefined) {\n                reject('The Node.js engine has not been started yet.');\n            }\n            this.engineWatcher.whenRunning(() => {\n                resolve();\n            });\n        });\n    }\n    sendMessage(args) {\n        if (this.nodeProcess === undefined) {\n            throw new Error('The Node.js engine has not been started yet.');\n        }\n        if (!this.engineWatcher.isRunning()) {\n            throw new Error('The Node.js engine is not yet fully running.');\n        }\n        const eventName = args.eventName;\n        const data = args.args;\n        if (!eventName || !data)\n            return;\n        const payload = { eventName, data: JSON.stringify(data) };\n        this.nodeProcess.send({ channelName: \"EVENT_CHANNEL\", payload });\n    }\n    receiveMessage(channelName, payload) {\n        const eventName = payload.eventName;\n        const data = payload.data;\n        if (channelName === \"APP_CHANNEL\" && eventName === \"ready\") {\n            this.engineWatcher.setRunning();\n        }\n        else if (channelName === \"EVENT_CHANNEL\") {\n            this.eventNotifier.channelReceive(eventName, data);\n        }\n    }\n}\n//# sourceMappingURL=implementation.js.map","import { app } from 'electron';\nimport { EventEmitter } from 'events';\nimport { existsSync } from 'fs';\nimport { join } from 'path';\nimport { CapacitorNodeJSImplementation } from './implementation';\nclass PluginSettings {\n    constructor() {\n        this.nodeDir = \"nodejs\";\n    }\n}\nexport class CapacitorNodeJS extends EventEmitter {\n    constructor(config) {\n        super();\n        // removeAllListeners() function is missing (https://github.com/capacitor-community/electron/pull/185)\n        //---------------------------------------------------------------------------------------\n        //#endregion\n        //#region PluginEvents\n        //---------------------------------------------------------------------------------------\n        this.PluginEventNotifier = {\n            // Bridge -------------------------------------------------------------------------------\n            channelReceive: (eventName, data) => {\n                //? TODO: Deserialize data\n                let payloadArray = [];\n                try {\n                    payloadArray = JSON.parse(data);\n                    if (!Array.isArray(payloadArray)) {\n                        payloadArray = [payloadArray];\n                    }\n                }\n                catch (_a) {\n                    payloadArray = [data];\n                }\n                this.notifyChannelListeners(eventName, payloadArray);\n            }\n        };\n        this.config = config;\n        this.implementation = new CapacitorNodeJSImplementation(this.PluginEventNotifier);\n        this.readPluginSettings().then(pluginSettings => {\n            this.implementation.startEngine(pluginSettings.nodeDir);\n        });\n        /*\n        if (!app) return;\n    \n        const _self = this;\n    \n        //\n        // Get configurations and start NodeJS engine\n        //\n        const configFileBase = join(app.getAppPath(), 'capacitor.config.');\n            const configFileExt =\n                existsSync(configFileBase + 'json') ? 'json' :\n                    existsSync(configFileBase + 'js') ? 'js' :\n                        existsSync(configFileBase + 'ts') ? 'ts' : undefined;\n    \n        if (!configFileExt) startEngine();\n    \n        const configFile = configFileBase + configFileExt;\n        import(configFile).then(value => {\n          const config = value.default || value;\n          startEngine({ nodeDir: config?.plugins?.NodeJS?.nodeDir });\n        });\n    \n        function startEngine(options: { nodeDir: string } = undefined): void {\n          const nodeDir = join(app.getAppPath(), 'app', options?.nodeDir ?? 'nodejs');\n          const nodePackageJson = join(nodeDir, 'package.json');\n          const bridgeModule = join(nodeDir, 'node_modules', 'bridge', 'bridge');\n    \n          import(bridgeModule).then(bridge => {\n            _self.eventChannel = bridge.eventChannel;\n    \n            //\n            // Forward event emits from the NodeJS engine to CapacitorJS\n            //\n            bridge.NativeBridge.addListener('APP_CHANNEL', (data: any) => {\n              const messageCodec = bridge.MessageCodec.deserialize(data);\n              if (messageCodec.event == 'ready') _self.isNodeEngineRunning = true;\n            });\n    \n            bridge.NativeBridge.addListener('EVENT_CHANNEL', (data: any) => {\n              const messageCodec = bridge.MessageCodec.deserialize(data);\n              _self.emit(messageCodec.event, { args: messageCodec.payload });\n            });\n    \n            //\n            // Start NodeJS project from app\n            //\n            import(nodePackageJson).then(value => {\n              const nodeMainFile = join(nodeDir, value.main);\n              require(nodeMainFile);\n            });\n          });\n    \n    \n        }\n        */\n    }\n    async readPluginSettings() {\n        var _a, _b, _c;\n        let config = (_b = (_a = this.config) === null || _a === void 0 ? void 0 : _a.plugins) === null || _b === void 0 ? void 0 : _b.CapacitorNodeJS;\n        //!-------------------------- workaround ---------------------------\n        // the configuration exposed by the capacitor-community/electron platform\n        // is always empty for some reason\n        const configPathBase = join(app.getAppPath(), 'capacitor.config.');\n        const configPathExt = existsSync(configPathBase + 'json') ? 'json' :\n            existsSync(configPathBase + 'js') ? 'js' :\n                existsSync(configPathBase + 'ts') ? 'ts' : undefined;\n        const configPath = configPathBase + configPathExt;\n        const configFile = await require(configPath);\n        const capacitorConfig = configFile.default || configFile;\n        config = (_c = capacitorConfig === null || capacitorConfig === void 0 ? void 0 : capacitorConfig.plugins) === null || _c === void 0 ? void 0 : _c.CapacitorNodeJS;\n        //!-----------------------------------------------------------------\n        const settings = new PluginSettings();\n        settings.nodeDir = (config === null || config === void 0 ? void 0 : config.nodeDir) || settings.nodeDir;\n        return settings;\n    }\n    //#region PluginMethods\n    //---------------------------------------------------------------------------------------\n    async send(args) {\n        const eventName = args.eventName;\n        if (eventName === undefined) {\n            throw new Error(\"Required parameter 'eventName' was not specified\");\n        }\n        if (args.args === undefined) {\n            args.args = [];\n        }\n        this.implementation.sendMessage(args);\n    }\n    async whenReady() {\n        return this.implementation.resolveWhenRunning();\n    }\n    //---------------------------------------------------------------------------------------\n    //#endregion\n    //#region PluginListeners\n    //---------------------------------------------------------------------------------------\n    notifyChannelListeners(eventName, payloadArray) {\n        const args = { args: payloadArray };\n        this.emit(eventName, args);\n    }\n}\n//# sourceMappingURL=index.js.map"],"names":["delimiter","joinPath","app","fork","EventEmitter","join","existsSync"],"mappings":"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"}